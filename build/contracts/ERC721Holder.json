{
  "contractName": "ERC721Holder",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/custom50PersentCharityNFT/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/custom50PersentCharityNFT/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x6966b756b6d90da4d2014ef4298db04cb6807b7b413166b176ac09c4276577ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db58a756be7c96dbcd09cb0ef76e61e3e1fb482811072e383ff041af45db47f9\",\"dweb:/ipfs/QmdSMgcBmwPRRomyykpoPWapaufEMRwFKNbBp1287rSdiB\"]},\"project:/contracts/custom50PersentCharityNFT/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x4a44554f8953943200873acb0615e9afd165062e80f9491a602a63add048e595\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8968c169fabcd477890b727b3fc37a4b2f7abbc5369d95bd47d0f31efddcd56a\",\"dweb:/ipfs/QmW6tS25hkZHQ7oDtQ3aCasjz4GJto8gDWEwC3zc1etyut\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610225806100206000396000f3fe608060405234801561001057600080fd5b5060043610610047577c01000000000000000000000000000000000000000000000000000000006000350463150b7a02811461004c575b600080fd5b61005f61005a3660046100c7565b610075565b60405161006c9190610193565b60405180910390f35b7f150b7a0200000000000000000000000000000000000000000000000000000000949350505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146100c257600080fd5b919050565b600080600080608085870312156100dc578384fd5b6100e58561009e565b935060206100f481870161009e565b935060408601359250606086013567ffffffffffffffff80821115610117578384fd5b818801915088601f83011261012a578384fd5b81358181111561013c5761013c6101c0565b604051601f8201601f191681018501838111828210171561015f5761015f6101c0565b60405281815283820185018b1015610175578586fd5b81858501868301379081019093019390935250939692955090935050565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212205dba4e865d7f5319c184650a46aa18e8a94c51a2046ec1c8d509981997418aeb64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610047577c01000000000000000000000000000000000000000000000000000000006000350463150b7a02811461004c575b600080fd5b61005f61005a3660046100c7565b610075565b60405161006c9190610193565b60405180910390f35b7f150b7a0200000000000000000000000000000000000000000000000000000000949350505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146100c257600080fd5b919050565b600080600080608085870312156100dc578384fd5b6100e58561009e565b935060206100f481870161009e565b935060408601359250606086013567ffffffffffffffff80821115610117578384fd5b818801915088601f83011261012a578384fd5b81358181111561013c5761013c6101c0565b604051601f8201601f191681018501838111828210171561015f5761015f6101c0565b60405281815283820185018b1015610175578586fd5b81858501868301379081019093019390935250939692955090935050565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212205dba4e865d7f5319c184650a46aa18e8a94c51a2046ec1c8d509981997418aeb64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1839:56",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:56",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "65:147:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "75:29:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "97:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "84:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "84:20:56"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "75:5:56"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "190:16:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "199:1:56",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "202:1:56",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "192:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "192:12:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "192:12:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "126:5:56"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "137:5:56"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "144:42:56",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "133:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "133:54:56"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "123:2:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "123:65:56"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "116:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:73:56"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:56"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "44:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "55:5:56",
                "type": ""
              }
            ],
            "src": "14:198:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "347:1048:56",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "394:26:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "403:6:56"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "411:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "396:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "396:22:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "396:22:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "368:7:56"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "377:9:56"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "364:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "364:23:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "389:3:56",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "360:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "360:33:56"
                  },
                  "nodeType": "YulIf",
                  "src": "357:2:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "429:41:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "460:9:56"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "439:20:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "439:31:56"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "429:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "479:12:56",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "489:2:56",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "483:2:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "500:50:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "535:9:56"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "546:2:56"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "531:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "531:18:56"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "510:20:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "510:40:56"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "500:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "559:42:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "586:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "597:2:56",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "582:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "582:18:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "569:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "569:32:56"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "559:6:56"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "610:46:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "641:9:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "652:2:56",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "637:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "637:18:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "624:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:32:56"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "614:6:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "665:28:56",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "675:18:56",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "669:2:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "720:26:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "729:6:56"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "737:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "722:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "722:22:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "722:22:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "708:6:56"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "716:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "705:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "705:14:56"
                  },
                  "nodeType": "YulIf",
                  "src": "702:2:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "755:32:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "769:9:56"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "765:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "765:22:56"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "759:2:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "835:26:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "844:6:56"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "852:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "837:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "837:22:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "837:22:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "814:2:56"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "818:4:56",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "810:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "810:13:56"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "825:7:56"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "806:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "806:27:56"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "799:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "799:35:56"
                  },
                  "nodeType": "YulIf",
                  "src": "796:2:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "870:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "893:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "880:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "880:16:56"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "874:2:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "919:22:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "921:16:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "921:18:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "921:18:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "911:2:56"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "915:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "908:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:10:56"
                  },
                  "nodeType": "YulIf",
                  "src": "905:2:56"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "950:23:56",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "970:2:56",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "964:5:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "964:9:56"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "954:6:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "982:67:56",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1008:6:56"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1024:2:56"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1028:4:56",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1020:3:56"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1020:13:56"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1039:2:56",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1035:3:56"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1035:7:56"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1016:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1016:27:56"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1004:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1004:40:56"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1046:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1000:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1000:49:56"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "986:10:56",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1108:22:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1110:16:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1110:18:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1110:18:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1067:10:56"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1079:2:56"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1064:2:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1064:18:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1087:10:56"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1099:6:56"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1084:2:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1084:22:56"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1061:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1061:46:56"
                  },
                  "nodeType": "YulIf",
                  "src": "1058:2:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1146:2:56",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1150:10:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1139:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1139:22:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1139:22:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1177:6:56"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1185:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1170:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1170:18:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1170:18:56"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1234:26:56",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1243:6:56"
                            },
                            {
                              "name": "value3",
                              "nodeType": "YulIdentifier",
                              "src": "1251:6:56"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1236:6:56"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1236:22:56"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1236:22:56"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1211:2:56"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1215:2:56"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1207:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1207:11:56"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1220:2:56"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1203:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1203:20:56"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1225:7:56"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1200:2:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1200:33:56"
                  },
                  "nodeType": "YulIf",
                  "src": "1197:2:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1286:6:56"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1294:2:56"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1282:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1282:15:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1303:2:56"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1307:2:56"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1299:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1299:11:56"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "1312:2:56"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1269:12:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1269:46:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1269:46:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1339:6:56"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1347:2:56"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1335:3:56"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1335:15:56"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1352:2:56"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1331:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1331:24:56"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "1357:6:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1324:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1324:40:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1324:40:56"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1373:16:56",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1383:6:56"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1373:6:56"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "289:9:56",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "300:7:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "312:6:56",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "320:6:56",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "328:6:56",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "336:6:56",
                "type": ""
              }
            ],
            "src": "217:1178:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1499:149:56",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1509:26:56",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1521:9:56"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1532:2:56",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1517:3:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1517:18:56"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1509:4:56"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1551:9:56"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1566:6:56"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1574:66:56",
                            "type": "",
                            "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1562:3:56"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1562:79:56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1544:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1544:98:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1544:98:56"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1468:9:56",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1479:6:56",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1490:4:56",
                "type": ""
              }
            ],
            "src": "1400:248:56"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1685:152:56",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1702:1:56",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1705:77:56",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1695:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1695:88:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1695:88:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1799:1:56",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1802:4:56",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1792:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1792:15:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1792:15:56"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1823:1:56",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1826:4:56",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1816:6:56"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1816:15:56"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1816:15:56"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1653:184:56"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := abi_decode_t_address(headStart)\n        let _1 := 32\n        value1 := abi_decode_t_address(add(headStart, _1))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value3, value3) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value3, value3) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_4, 0x1f), not(31))), _1)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value3, value3) }\n        calldatacopy(add(memPtr, _1), add(_3, _1), _4)\n        mstore(add(add(memPtr, _4), _1), value3)\n        value3 := memPtr\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 56,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "328:391:23:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "328:391:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;517:200;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;680:30;517:200;;;;;;:::o;14:198:56:-;84:20;;144:42;133:54;;123:65;;113:2;;202:1;199;192:12;113:2;65:147;;;:::o;217:1178::-;;;;;389:3;377:9;368:7;364:23;360:33;357:2;;;411:6;403;396:22;357:2;439:31;460:9;439:31;:::i;:::-;429:41;;489:2;510:40;546:2;535:9;531:18;510:40;:::i;:::-;500:50;;597:2;586:9;582:18;569:32;559:42;;652:2;641:9;637:18;624:32;675:18;716:2;708:6;705:14;702:2;;;737:6;729;722:22;702:2;780:6;769:9;765:22;755:32;;825:7;818:4;814:2;810:13;806:27;796:2;;852:6;844;837:22;796:2;893;880:16;915:2;911;908:10;905:2;;;921:18;;:::i;:::-;970:2;964:9;1039:2;1020:13;;-1:-1:-1;;1016:27:56;1004:40;;1000:49;;1064:18;;;1084:22;;;1061:46;1058:2;;;1110:18;;:::i;:::-;1146:2;1139:22;1170:18;;;1207:11;;;1203:20;;1200:33;-1:-1:-1;1197:2:56;;;1251:6;1243;1236:22;1197:2;1312;1307;1303;1299:11;1294:2;1286:6;1282:15;1269:46;1335:15;;;1331:24;;;1324:40;;;;-1:-1:-1;347:1048:56;;;;-1:-1:-1;347:1048:56;;-1:-1:-1;;347:1048:56:o;1400:248::-;1574:66;1562:79;;;;1544:98;;1532:2;1517:18;;1499:149::o;1653:184::-;1705:77;1702:1;1695:88;1802:4;1799:1;1792:15;1826:4;1823:1;1816:15",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\n */\ncontract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address,\n        address,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}",
  "sourcePath": "/Volumes/Transcend/Projects/DappsLab/Lottery-Smart-Contract/contracts/custom50PersentCharityNFT/ERC721/utils/ERC721Holder.sol",
  "ast": {
    "absolutePath": "project:/contracts/custom50PersentCharityNFT/ERC721/utils/ERC721Holder.sol",
    "exportedSymbols": {
      "ERC721Holder": [
        3696
      ],
      "IERC721Receiver": [
        2875
      ]
    },
    "id": 3697,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3671,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:23"
      },
      {
        "absolutePath": "project:/contracts/custom50PersentCharityNFT/ERC721/IERC721Receiver.sol",
        "file": "../IERC721Receiver.sol",
        "id": 3672,
        "nodeType": "ImportDirective",
        "scope": 3697,
        "sourceUnit": 2876,
        "src": "58:32:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3674,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2875,
              "src": "353:15:23"
            },
            "id": 3675,
            "nodeType": "InheritanceSpecifier",
            "src": "353:15:23"
          }
        ],
        "contractDependencies": [
          2875
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3673,
          "nodeType": "StructuredDocumentation",
          "src": "92:235:23",
          "text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
        },
        "fullyImplemented": true,
        "id": 3696,
        "linearizedBaseContracts": [
          3696,
          2875
        ],
        "name": "ERC721Holder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2874
            ],
            "body": {
              "id": 3694,
              "nodeType": "Block",
              "src": "663:54:23",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 3690,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "680:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Holder_$3696",
                          "typeString": "contract ERC721Holder"
                        }
                      },
                      "id": 3691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3695,
                      "src": "680:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 3692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "680:30:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 3689,
                  "id": 3693,
                  "nodeType": "Return",
                  "src": "673:37:23"
                }
              ]
            },
            "documentation": {
              "id": 3676,
              "nodeType": "StructuredDocumentation",
              "src": "375:137:23",
              "text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
            },
            "functionSelector": "150b7a02",
            "id": 3695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3686,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "637:8:23"
            },
            "parameters": {
              "id": 3685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3678,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "552:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3680,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "569:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3682,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "586:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3681,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3684,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "603:12:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3683,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "542:79:23"
            },
            "returnParameters": {
              "id": 3689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3688,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "655:6:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3687,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:8:23"
            },
            "scope": 3696,
            "src": "517:200:23",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 3697,
        "src": "328:391:23"
      }
    ],
    "src": "33:686:23"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/custom50PersentCharityNFT/ERC721/utils/ERC721Holder.sol",
    "exportedSymbols": {
      "ERC721Holder": [
        3696
      ],
      "IERC721Receiver": [
        2875
      ]
    },
    "id": 3697,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3671,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:23"
      },
      {
        "absolutePath": "project:/contracts/custom50PersentCharityNFT/ERC721/IERC721Receiver.sol",
        "file": "../IERC721Receiver.sol",
        "id": 3672,
        "nodeType": "ImportDirective",
        "scope": 3697,
        "sourceUnit": 2876,
        "src": "58:32:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3674,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2875,
              "src": "353:15:23"
            },
            "id": 3675,
            "nodeType": "InheritanceSpecifier",
            "src": "353:15:23"
          }
        ],
        "contractDependencies": [
          2875
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3673,
          "nodeType": "StructuredDocumentation",
          "src": "92:235:23",
          "text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}."
        },
        "fullyImplemented": true,
        "id": 3696,
        "linearizedBaseContracts": [
          3696,
          2875
        ],
        "name": "ERC721Holder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2874
            ],
            "body": {
              "id": 3694,
              "nodeType": "Block",
              "src": "663:54:23",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 3690,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "680:4:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721Holder_$3696",
                          "typeString": "contract ERC721Holder"
                        }
                      },
                      "id": 3691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3695,
                      "src": "680:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 3692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "680:30:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 3689,
                  "id": 3693,
                  "nodeType": "Return",
                  "src": "673:37:23"
                }
              ]
            },
            "documentation": {
              "id": 3676,
              "nodeType": "StructuredDocumentation",
              "src": "375:137:23",
              "text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
            },
            "functionSelector": "150b7a02",
            "id": 3695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3686,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "637:8:23"
            },
            "parameters": {
              "id": 3685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3678,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "552:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3680,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "569:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "569:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3682,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "586:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3681,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3684,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "603:12:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3683,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "542:79:23"
            },
            "returnParameters": {
              "id": 3689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3688,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3695,
                  "src": "655:6:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3687,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "654:8:23"
            },
            "scope": 3696,
            "src": "517:200:23",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 3697,
        "src": "328:391:23"
      }
    ],
    "src": "33:686:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-28T10:35:29.185Z",
  "devdoc": {
    "details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}