{
  "contractName": "Escrow",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "depositsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"depositsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base escrow contract, holds funds designated for a payee until they withdraw them. Intended usage: This contract (and derived escrow contracts) should be a standalone contract, that only interacts with the contract that instantiated it. That way, it is guaranteed that all Ether will be handled according to the `Escrow` rules, and there is no need to check for payable functions or transfers in the inheritance tree. The contract that uses the escrow as its payment method should be its owner, and provide public methods redirecting to the escrow's deposit and withdraw.\",\"kind\":\"dev\",\"methods\":{\"deposit(address)\":{\"details\":\"Stores the sent amount as credit to be withdrawn.\",\"params\":{\"payee\":\"The destination address of the funds.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"The address whose funds will be withdrawn and transferred to.\"}}},\"title\":\"Escrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/customERC20ERC721/utils/escrow/Escrow.sol\":\"Escrow\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/customERC20ERC721/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"project:/contracts/customERC20ERC721/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"project:/contracts/customERC20ERC721/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"project:/contracts/customERC20ERC721/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xaf3f0d87fb0237dc255183be425f45fc902b343494d8a083878eb615211cc789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271399b7a3f92a81525320ccb879999cfd58cd5ce9f7e1cc29c995fc494bd08f\",\"dweb:/ipfs/QmNoB7sWcRJyJLwDeXttzKcxdUzZAKij4oAZUgcBAGZawj\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610033610025640100000000610038810204565b64010000000061003c810204565b61008c565b3390565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106858061009b6000396000f3fe608060405260043610610071577c0100000000000000000000000000000000000000000000000000000000600035046351cff8d98114610076578063715018a6146100985780638da5cb5b146100ad578063e3a9db1a146100d8578063f2fde38b14610105578063f340fa0114610125575b600080fd5b34801561008257600080fd5b50610096610091366004610494565b610138565b005b3480156100a457600080fd5b506100966101f0565b3480156100b957600080fd5b506100c261023e565b6040516100cf91906104ba565b60405180910390f35b3480156100e457600080fd5b506100f86100f3366004610494565b61024d565b6040516100cf91906105f4565b34801561011157600080fd5b50610096610120366004610494565b610268565b610096610133366004610494565b6102df565b61014061038b565b600160a060020a031661015161023e565b600160a060020a0316146101835760405160e560020a62461bcd02815260040161017a906105bf565b60405180910390fd5b600160a060020a03811660008181526001602052604081208054919055906101ab908261038f565b81600160a060020a03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516101e491906105f4565b60405180910390a25050565b6101f861038b565b600160a060020a031661020961023e565b600160a060020a0316146102325760405160e560020a62461bcd02815260040161017a906105bf565b61023c6000610437565b565b600054600160a060020a031690565b600160a060020a031660009081526001602052604090205490565b61027061038b565b600160a060020a031661028161023e565b600160a060020a0316146102aa5760405160e560020a62461bcd02815260040161017a906105bf565b600160a060020a0381166102d35760405160e560020a62461bcd02815260040161017a906104ce565b6102dc81610437565b50565b6102e761038b565b600160a060020a03166102f861023e565b600160a060020a0316146103215760405160e560020a62461bcd02815260040161017a906105bf565b600160a060020a03811660009081526001602052604081208054349283929161034b9084906105fd565b9250508190555081600160a060020a03167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040516101e491906105f4565b3390565b30318111156103b35760405160e560020a62461bcd02815260040161017a90610588565b600082600160a060020a0316826040516103cc906104b7565b60006040518083038185875af1925050503d8060008114610409576040519150601f19603f3d011682016040523d82523d6000602084013e61040e565b606091505b50509050806104325760405160e560020a62461bcd02815260040161017a9061052b565b505050565b60008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104a5578081fd5b81356104b08161063a565b9392505050565b90565b600160a060020a0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252603a908201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260408201527f6563697069656e74206d61792068617665207265766572746564000000000000606082015260800190565b6020808252601d908201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b60008219821115610635577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500190565b600160a060020a03811681146102dc57600080fdfea264697066735822122049eed9b6f8ac27779bfff5ff37b5867c8700120721a4c57067839dfc4312137164736f6c63430008000033",
  "deployedBytecode": "0x608060405260043610610071577c0100000000000000000000000000000000000000000000000000000000600035046351cff8d98114610076578063715018a6146100985780638da5cb5b146100ad578063e3a9db1a146100d8578063f2fde38b14610105578063f340fa0114610125575b600080fd5b34801561008257600080fd5b50610096610091366004610494565b610138565b005b3480156100a457600080fd5b506100966101f0565b3480156100b957600080fd5b506100c261023e565b6040516100cf91906104ba565b60405180910390f35b3480156100e457600080fd5b506100f86100f3366004610494565b61024d565b6040516100cf91906105f4565b34801561011157600080fd5b50610096610120366004610494565b610268565b610096610133366004610494565b6102df565b61014061038b565b600160a060020a031661015161023e565b600160a060020a0316146101835760405160e560020a62461bcd02815260040161017a906105bf565b60405180910390fd5b600160a060020a03811660008181526001602052604081208054919055906101ab908261038f565b81600160a060020a03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516101e491906105f4565b60405180910390a25050565b6101f861038b565b600160a060020a031661020961023e565b600160a060020a0316146102325760405160e560020a62461bcd02815260040161017a906105bf565b61023c6000610437565b565b600054600160a060020a031690565b600160a060020a031660009081526001602052604090205490565b61027061038b565b600160a060020a031661028161023e565b600160a060020a0316146102aa5760405160e560020a62461bcd02815260040161017a906105bf565b600160a060020a0381166102d35760405160e560020a62461bcd02815260040161017a906104ce565b6102dc81610437565b50565b6102e761038b565b600160a060020a03166102f861023e565b600160a060020a0316146103215760405160e560020a62461bcd02815260040161017a906105bf565b600160a060020a03811660009081526001602052604081208054349283929161034b9084906105fd565b9250508190555081600160a060020a03167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040516101e491906105f4565b3390565b30318111156103b35760405160e560020a62461bcd02815260040161017a90610588565b600082600160a060020a0316826040516103cc906104b7565b60006040518083038185875af1925050503d8060008114610409576040519150601f19603f3d011682016040523d82523d6000602084013e61040e565b606091505b50509050806104325760405160e560020a62461bcd02815260040161017a9061052b565b505050565b60008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104a5578081fd5b81356104b08161063a565b9392505050565b90565b600160a060020a0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252603a908201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260408201527f6563697069656e74206d61792068617665207265766572746564000000000000606082015260800190565b6020808252601d908201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b60008219821115610635577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b500190565b600160a060020a03811681146102dc57600080fdfea264697066735822122049eed9b6f8ac27779bfff5ff37b5867c8700120721a4c57067839dfc4312137164736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3175:58",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:58",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:58"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:58"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:58",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:58",
                "type": ""
              }
            ],
            "src": "14:259:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "356:189:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "402:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "411:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "419:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "404:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "404:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "404:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "377:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "386:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "373:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "373:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "398:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "369:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "369:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "366:2:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "437:36:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "463:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "450:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "450:23:58"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "441:5:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "509:5:58"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "482:26:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "482:33:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "482:33:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "524:15:58",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "534:5:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "524:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "322:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "333:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "345:6:58",
                "type": ""
              }
            ],
            "src": "278:267:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:14:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "743:10:58",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "750:3:58"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "743:3:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "725:3:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "733:3:58",
                "type": ""
              }
            ],
            "src": "550:205:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "861:125:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "871:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "883:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "894:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "879:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "871:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "913:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "928:6:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "936:42:58",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:55:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "906:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "906:74:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "906:74:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "830:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "841:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "852:4:58",
                "type": ""
              }
            ],
            "src": "760:226:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1165:228:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1182:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1193:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1175:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1175:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1175:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1216:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1227:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1212:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1212:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1232:2:58",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1205:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1205:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1205:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1255:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1266:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1251:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1251:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1271:34:58",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1244:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1244:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1244:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1326:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1337:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1322:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1322:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1342:8:58",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1315:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1315:36:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1315:36:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1360:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1372:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1383:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1368:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1368:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1360:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1142:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1156:4:58",
                "type": ""
              }
            ],
            "src": "991:402:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1572:248:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1589:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1600:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1582:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1582:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1582:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1623:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1634:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1619:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1619:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1639:2:58",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1612:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1612:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1612:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1662:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1673:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1658:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1658:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1678:34:58",
                        "type": "",
                        "value": "Address: unable to send value, r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1651:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1651:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1651:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1733:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1744:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1729:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1729:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1749:28:58",
                        "type": "",
                        "value": "ecipient may have reverted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1722:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1722:56:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1722:56:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1787:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1799:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1810:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1795:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1795:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1787:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1549:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1563:4:58",
                "type": ""
              }
            ],
            "src": "1398:422:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1999:179:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2016:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2027:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2009:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2009:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2009:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2050:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2061:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2046:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2046:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2066:2:58",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2039:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2039:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2039:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2089:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2100:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2085:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2085:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2105:31:58",
                        "type": "",
                        "value": "Address: insufficient balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2078:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2078:59:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2078:59:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2146:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2158:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2169:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2154:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2154:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2146:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1976:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1990:4:58",
                "type": ""
              }
            ],
            "src": "1825:353:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2357:182:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2374:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2385:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2367:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2367:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2408:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2419:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2404:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2404:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2424:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2397:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2397:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2397:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2447:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2458:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2443:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2443:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2463:34:58",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2436:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2436:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2436:62:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2507:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2519:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2530:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2515:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2515:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2507:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2334:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2348:4:58",
                "type": ""
              }
            ],
            "src": "2183:356:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2645:76:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2655:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2667:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2678:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2663:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2663:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2655:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2697:9:58"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2708:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2690:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2690:25:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2690:25:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2614:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2625:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2636:4:58",
                "type": ""
              }
            ],
            "src": "2544:177:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2774:238:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2809:172:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "2830:3:58"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2835:77:58",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2823:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2823:90:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2823:90:58"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2933:1:58",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2936:4:58",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2926:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2926:15:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2926:15:58"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "2961:3:58"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2966:4:58",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2954:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2954:17:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2954:17:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2790:1:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2797:1:58"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2793:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2793:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2787:2:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2787:13:58"
                  },
                  "nodeType": "YulIf",
                  "src": "2784:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2990:16:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3001:1:58"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3004:1:58"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2997:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2997:9:58"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "2990:3:58"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2757:1:58",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2760:1:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2766:3:58",
                "type": ""
              }
            ],
            "src": "2726:286:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3064:109:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3151:16:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3160:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3163:1:58",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3153:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3153:12:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3153:12:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3087:5:58"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3098:5:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3105:42:58",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3094:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3094:54:58"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3084:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3084:65:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3077:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3077:73:58"
                  },
                  "nodeType": "YulIf",
                  "src": "3074:2:58"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3053:5:58",
                "type": ""
              }
            ],
            "src": "3017:156:58"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Address: unable to send value, r\")\n        mstore(add(headStart, 96), \"ecipient may have reverted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 58,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "751:1346:42:-:0;;;;;;;;;;;;-1:-1:-1;867:23:28;877:12;:10;;;;:12;:::i;:::-;867:9;;;;:23;:::i;:::-;751:1346:42;;586:96:36;665:10;586:96;:::o;2041:169:28:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:28;;;-1:-1:-1;;;;;;2131:17:28;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;751:1346:42:-;;;;;;;",
  "deployedSourceMap": "751:1346:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1871:224;;;;;;;;;;-1:-1:-1;1871:224:42;;;;;:::i;:::-;;:::i;:::-;;1605:92:28;;;;;;;;;;;;;:::i;973:85::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1003:105:42;;;;;;;;;;-1:-1:-1;1003:105:42;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1846:189:28:-;;;;;;;;;;-1:-1:-1;1846:189:28;;;;;:::i;:::-;;:::i;1250:183:42:-;;;;;;:::i;:::-;;:::i;1871:224::-;1196:12:28;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:28;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:28;;1177:68;;;;-1:-1:-1;;;;;1177:68:28;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1965:16:42;::::1;1947:15;1965:16:::0;;;:9:::1;:16;::::0;;;;;;1992:20;;;1965:16;2023:24:::1;::::0;1965:16;2023:15:::1;:24::i;:::-;2073:5;-1:-1:-1::0;;;;;2063:25:42::1;;2080:7;2063:25;;;;;;:::i;:::-;;;;;;;;1255:1:28;1871:224:42::0;:::o;1605:92:28:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:28;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:28;;1177:68;;;;-1:-1:-1;;;;;1177:68:28;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;973:85::-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:28;973:85;:::o;1003:105:42:-;-1:-1:-1;;;;;1085:16:42;1059:7;1085:16;;;:9;:16;;;;;;;1003:105::o;1846:189:28:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:28;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:28;;1177:68;;;;-1:-1:-1;;;;;1177:68:28;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:28;::::1;1926:73;;;;-1:-1:-1::0;;;;;1926:73:28::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;1250:183:42:-;1196:12:28;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:28;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:28;;1177:68;;;;-1:-1:-1;;;;;1177:68:28;;;;;;;:::i;:::-;-1:-1:-1;;;;;1361:16:42;::::1;1325:14;1361:16:::0;;;:9:::1;:16;::::0;;;;:26;;1342:9:::1;::::0;;;1361:16;:26:::1;::::0;1342:9;;1361:26:::1;:::i;:::-;;;;;;;;1412:5;-1:-1:-1::0;;;;;1402:24:42::1;;1419:6;1402:24;;;;;;:::i;586:96:36:-:0;665:10;586:96;:::o;2012:312:34:-;2109:4;2101:21;:31;-1:-1:-1;2101:31:34;2093:73;;;;-1:-1:-1;;;;;2093:73:34;;;;;;;:::i;:::-;2178:12;2196:9;-1:-1:-1;;;;;2196:14:34;2218:6;2196:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2177:52;;;2247:7;2239:78;;;;-1:-1:-1;;;;;2239:78:34;;;;;;;:::i;:::-;2012:312;;;:::o;2041:169:28:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:28;;;-1:-1:-1;;2131:17:28;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:259:58:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:58:o;550:205::-;750:3;741:14::o;760:226::-;-1:-1:-1;;;;;924:55:58;;;;906:74;;894:2;879:18;;861:125::o;991:402::-;1193:2;1175:21;;;1232:2;1212:18;;;1205:30;1271:34;1266:2;1251:18;;1244:62;1342:8;1337:2;1322:18;;1315:36;1383:3;1368:19;;1165:228::o;1398:422::-;1600:2;1582:21;;;1639:2;1619:18;;;1612:30;1678:34;1673:2;1658:18;;1651:62;1749:28;1744:2;1729:18;;1722:56;1810:3;1795:19;;1572:248::o;1825:353::-;2027:2;2009:21;;;2066:2;2046:18;;;2039:30;2105:31;2100:2;2085:18;;2078:59;2169:2;2154:18;;1999:179::o;2183:356::-;2385:2;2367:21;;;2404:18;;;2397:30;2463:34;2458:2;2443:18;;2436:62;2530:2;2515:18;;2357:182::o;2544:177::-;2690:25;;;2678:2;2663:18;;2645:76::o;2726:286::-;;2797:1;2793:6;2790:1;2787:13;2784:2;;;2835:77;2830:3;2823:90;2936:4;2933:1;2926:15;2966:4;2961:3;2954:17;2784:2;-1:-1:-1;2997:9:58;;2774:238::o;3017:156::-;-1:-1:-1;;;;;3098:5:58;3094:54;3087:5;3084:65;3074:2;;3163:1;3160;3153:12",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../access/Ownable.sol\";\nimport \"../Address.sol\";\n\n/**\n * @title Escrow\n * @dev Base escrow contract, holds funds designated for a payee until they\n * withdraw them.\n *\n * Intended usage: This contract (and derived escrow contracts) should be a\n * standalone contract, that only interacts with the contract that instantiated\n * it. That way, it is guaranteed that all Ether will be handled according to\n * the `Escrow` rules, and there is no need to check for payable functions or\n * transfers in the inheritance tree. The contract that uses the escrow as its\n * payment method should be its owner, and provide public methods redirecting\n * to the escrow's deposit and withdraw.\n */\ncontract Escrow is Ownable {\n    using Address for address payable;\n\n    event Deposited(address indexed payee, uint256 weiAmount);\n    event Withdrawn(address indexed payee, uint256 weiAmount);\n\n    mapping(address => uint256) private _deposits;\n\n    function depositsOf(address payee) public view returns (uint256) {\n        return _deposits[payee];\n    }\n\n    /**\n     * @dev Stores the sent amount as credit to be withdrawn.\n     * @param payee The destination address of the funds.\n     */\n    function deposit(address payee) public payable virtual onlyOwner {\n        uint256 amount = msg.value;\n        _deposits[payee] += amount;\n        emit Deposited(payee, amount);\n    }\n\n    /**\n     * @dev Withdraw accumulated balance for a payee, forwarding all gas to the\n     * recipient.\n     *\n     * WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n     * Make sure you trust the recipient, or are either following the\n     * checks-effects-interactions pattern or using {ReentrancyGuard}.\n     *\n     * @param payee The address whose funds will be withdrawn and transferred to.\n     */\n    function withdraw(address payable payee) public virtual onlyOwner {\n        uint256 payment = _deposits[payee];\n\n        _deposits[payee] = 0;\n\n        payee.sendValue(payment);\n\n        emit Withdrawn(payee, payment);\n    }\n}\n",
  "sourcePath": "/Volumes/Transcend/Projects/DappsLab/Lottery-Smart-Contract/contracts/customERC20ERC721/utils/escrow/Escrow.sol",
  "ast": {
    "absolutePath": "project:/contracts/customERC20ERC721/utils/escrow/Escrow.sol",
    "exportedSymbols": {
      "Address": [
        6184
      ],
      "Context": [
        6290
      ],
      "Escrow": [
        6813
      ],
      "Ownable": [
        5624
      ]
    },
    "id": 6814,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6719,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:42"
      },
      {
        "absolutePath": "project:/contracts/customERC20ERC721/access/Ownable.sol",
        "file": "../../access/Ownable.sol",
        "id": 6720,
        "nodeType": "ImportDirective",
        "scope": 6814,
        "sourceUnit": 5625,
        "src": "58:34:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/customERC20ERC721/utils/Address.sol",
        "file": "../Address.sol",
        "id": 6721,
        "nodeType": "ImportDirective",
        "scope": 6814,
        "sourceUnit": 6185,
        "src": "93:24:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6723,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5624,
              "src": "770:7:42"
            },
            "id": 6724,
            "nodeType": "InheritanceSpecifier",
            "src": "770:7:42"
          }
        ],
        "contractDependencies": [
          5624,
          6290
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6722,
          "nodeType": "StructuredDocumentation",
          "src": "119:631:42",
          "text": " @title Escrow\n @dev Base escrow contract, holds funds designated for a payee until they\n withdraw them.\n Intended usage: This contract (and derived escrow contracts) should be a\n standalone contract, that only interacts with the contract that instantiated\n it. That way, it is guaranteed that all Ether will be handled according to\n the `Escrow` rules, and there is no need to check for payable functions or\n transfers in the inheritance tree. The contract that uses the escrow as its\n payment method should be its owner, and provide public methods redirecting\n to the escrow's deposit and withdraw."
        },
        "fullyImplemented": true,
        "id": 6813,
        "linearizedBaseContracts": [
          6813,
          5624,
          6290
        ],
        "name": "Escrow",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6727,
            "libraryName": {
              "id": 6725,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6184,
              "src": "790:7:42"
            },
            "nodeType": "UsingForDirective",
            "src": "784:34:42",
            "typeName": {
              "id": 6726,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "802:15:42",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "anonymous": false,
            "id": 6733,
            "name": "Deposited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6729,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 6733,
                  "src": "840:21:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6731,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 6733,
                  "src": "863:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "839:42:42"
            },
            "src": "824:58:42"
          },
          {
            "anonymous": false,
            "id": 6739,
            "name": "Withdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6735,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 6739,
                  "src": "903:21:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6737,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 6739,
                  "src": "926:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "902:42:42"
            },
            "src": "887:58:42"
          },
          {
            "constant": false,
            "id": 6743,
            "mutability": "mutable",
            "name": "_deposits",
            "nodeType": "VariableDeclaration",
            "scope": 6813,
            "src": "951:45:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6742,
              "keyType": {
                "id": 6740,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "959:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "951:27:42",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 6741,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "970:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6754,
              "nodeType": "Block",
              "src": "1068:40:42",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 6750,
                      "name": "_deposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6743,
                      "src": "1085:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 6752,
                    "indexExpression": {
                      "id": 6751,
                      "name": "payee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6745,
                      "src": "1095:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1085:16:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6749,
                  "id": 6753,
                  "nodeType": "Return",
                  "src": "1078:23:42"
                }
              ]
            },
            "functionSelector": "e3a9db1a",
            "id": 6755,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositsOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6745,
                  "mutability": "mutable",
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 6755,
                  "src": "1023:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1022:15:42"
            },
            "returnParameters": {
              "id": 6749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6748,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6755,
                  "src": "1059:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1058:9:42"
            },
            "scope": 6813,
            "src": "1003:105:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6779,
              "nodeType": "Block",
              "src": "1315:118:42",
              "statements": [
                {
                  "assignments": [
                    6764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6764,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 6779,
                      "src": "1325:14:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6763,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1325:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6767,
                  "initialValue": {
                    "expression": {
                      "id": 6765,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1342:3:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 6766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "1342:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1325:26:42"
                },
                {
                  "expression": {
                    "id": 6772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6768,
                        "name": "_deposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6743,
                        "src": "1361:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6770,
                      "indexExpression": {
                        "id": 6769,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6758,
                        "src": "1371:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1361:16:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 6771,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6764,
                      "src": "1381:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1361:26:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6773,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:26:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6775,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6758,
                        "src": "1412:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6776,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6764,
                        "src": "1419:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6774,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6733,
                      "src": "1402:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1402:24:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6778,
                  "nodeType": "EmitStatement",
                  "src": "1397:29:42"
                }
              ]
            },
            "documentation": {
              "id": 6756,
              "nodeType": "StructuredDocumentation",
              "src": "1114:131:42",
              "text": " @dev Stores the sent amount as credit to be withdrawn.\n @param payee The destination address of the funds."
            },
            "functionSelector": "f340fa01",
            "id": 6780,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6761,
                "modifierName": {
                  "id": 6760,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5567,
                  "src": "1305:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "1305:9:42"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6758,
                  "mutability": "mutable",
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 6780,
                  "src": "1267:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1266:15:42"
            },
            "returnParameters": {
              "id": 6762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1315:0:42"
            },
            "scope": 6813,
            "src": "1250:183:42",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6811,
              "nodeType": "Block",
              "src": "1937:158:42",
              "statements": [
                {
                  "assignments": [
                    6789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6789,
                      "mutability": "mutable",
                      "name": "payment",
                      "nodeType": "VariableDeclaration",
                      "scope": 6811,
                      "src": "1947:15:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6788,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1947:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6793,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6790,
                      "name": "_deposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6743,
                      "src": "1965:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 6792,
                    "indexExpression": {
                      "id": 6791,
                      "name": "payee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6783,
                      "src": "1975:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1965:16:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1947:34:42"
                },
                {
                  "expression": {
                    "id": 6798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6794,
                        "name": "_deposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6743,
                        "src": "1992:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6796,
                      "indexExpression": {
                        "id": 6795,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6783,
                        "src": "2002:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1992:16:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 6797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2011:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1992:20:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6799,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:20:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6803,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6789,
                        "src": "2039:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6800,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6783,
                        "src": "2023:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 6802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5942,
                      "src": "2023:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 6804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2023:24:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6805,
                  "nodeType": "ExpressionStatement",
                  "src": "2023:24:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6807,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6783,
                        "src": "2073:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 6808,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6789,
                        "src": "2080:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6806,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6739,
                      "src": "2063:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:25:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6810,
                  "nodeType": "EmitStatement",
                  "src": "2058:30:42"
                }
              ]
            },
            "documentation": {
              "id": 6781,
              "nodeType": "StructuredDocumentation",
              "src": "1439:427:42",
              "text": " @dev Withdraw accumulated balance for a payee, forwarding all gas to the\n recipient.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n @param payee The address whose funds will be withdrawn and transferred to."
            },
            "functionSelector": "51cff8d9",
            "id": 6812,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6786,
                "modifierName": {
                  "id": 6785,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5567,
                  "src": "1927:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "1927:9:42"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6783,
                  "mutability": "mutable",
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 6812,
                  "src": "1889:21:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 6782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1889:15:42",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1888:23:42"
            },
            "returnParameters": {
              "id": 6787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1937:0:42"
            },
            "scope": 6813,
            "src": "1871:224:42",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 6814,
        "src": "751:1346:42"
      }
    ],
    "src": "33:2065:42"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/customERC20ERC721/utils/escrow/Escrow.sol",
    "exportedSymbols": {
      "Address": [
        6184
      ],
      "Context": [
        6290
      ],
      "Escrow": [
        6813
      ],
      "Ownable": [
        5624
      ]
    },
    "id": 6814,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6719,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:42"
      },
      {
        "absolutePath": "project:/contracts/customERC20ERC721/access/Ownable.sol",
        "file": "../../access/Ownable.sol",
        "id": 6720,
        "nodeType": "ImportDirective",
        "scope": 6814,
        "sourceUnit": 5625,
        "src": "58:34:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/customERC20ERC721/utils/Address.sol",
        "file": "../Address.sol",
        "id": 6721,
        "nodeType": "ImportDirective",
        "scope": 6814,
        "sourceUnit": 6185,
        "src": "93:24:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6723,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5624,
              "src": "770:7:42"
            },
            "id": 6724,
            "nodeType": "InheritanceSpecifier",
            "src": "770:7:42"
          }
        ],
        "contractDependencies": [
          5624,
          6290
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6722,
          "nodeType": "StructuredDocumentation",
          "src": "119:631:42",
          "text": " @title Escrow\n @dev Base escrow contract, holds funds designated for a payee until they\n withdraw them.\n Intended usage: This contract (and derived escrow contracts) should be a\n standalone contract, that only interacts with the contract that instantiated\n it. That way, it is guaranteed that all Ether will be handled according to\n the `Escrow` rules, and there is no need to check for payable functions or\n transfers in the inheritance tree. The contract that uses the escrow as its\n payment method should be its owner, and provide public methods redirecting\n to the escrow's deposit and withdraw."
        },
        "fullyImplemented": true,
        "id": 6813,
        "linearizedBaseContracts": [
          6813,
          5624,
          6290
        ],
        "name": "Escrow",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6727,
            "libraryName": {
              "id": 6725,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6184,
              "src": "790:7:42"
            },
            "nodeType": "UsingForDirective",
            "src": "784:34:42",
            "typeName": {
              "id": 6726,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "802:15:42",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "anonymous": false,
            "id": 6733,
            "name": "Deposited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6729,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 6733,
                  "src": "840:21:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6731,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 6733,
                  "src": "863:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6730,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "839:42:42"
            },
            "src": "824:58:42"
          },
          {
            "anonymous": false,
            "id": 6739,
            "name": "Withdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6735,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 6739,
                  "src": "903:21:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6737,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 6739,
                  "src": "926:17:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "926:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "902:42:42"
            },
            "src": "887:58:42"
          },
          {
            "constant": false,
            "id": 6743,
            "mutability": "mutable",
            "name": "_deposits",
            "nodeType": "VariableDeclaration",
            "scope": 6813,
            "src": "951:45:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6742,
              "keyType": {
                "id": 6740,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "959:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "951:27:42",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 6741,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "970:7:42",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6754,
              "nodeType": "Block",
              "src": "1068:40:42",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 6750,
                      "name": "_deposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6743,
                      "src": "1085:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 6752,
                    "indexExpression": {
                      "id": 6751,
                      "name": "payee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6745,
                      "src": "1095:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1085:16:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6749,
                  "id": 6753,
                  "nodeType": "Return",
                  "src": "1078:23:42"
                }
              ]
            },
            "functionSelector": "e3a9db1a",
            "id": 6755,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositsOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6745,
                  "mutability": "mutable",
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 6755,
                  "src": "1023:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1022:15:42"
            },
            "returnParameters": {
              "id": 6749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6748,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6755,
                  "src": "1059:7:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6747,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1058:9:42"
            },
            "scope": 6813,
            "src": "1003:105:42",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6779,
              "nodeType": "Block",
              "src": "1315:118:42",
              "statements": [
                {
                  "assignments": [
                    6764
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6764,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 6779,
                      "src": "1325:14:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6763,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1325:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6767,
                  "initialValue": {
                    "expression": {
                      "id": 6765,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1342:3:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 6766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "1342:9:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1325:26:42"
                },
                {
                  "expression": {
                    "id": 6772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6768,
                        "name": "_deposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6743,
                        "src": "1361:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6770,
                      "indexExpression": {
                        "id": 6769,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6758,
                        "src": "1371:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1361:16:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 6771,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6764,
                      "src": "1381:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1361:26:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6773,
                  "nodeType": "ExpressionStatement",
                  "src": "1361:26:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6775,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6758,
                        "src": "1412:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6776,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6764,
                        "src": "1419:6:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6774,
                      "name": "Deposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6733,
                      "src": "1402:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1402:24:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6778,
                  "nodeType": "EmitStatement",
                  "src": "1397:29:42"
                }
              ]
            },
            "documentation": {
              "id": 6756,
              "nodeType": "StructuredDocumentation",
              "src": "1114:131:42",
              "text": " @dev Stores the sent amount as credit to be withdrawn.\n @param payee The destination address of the funds."
            },
            "functionSelector": "f340fa01",
            "id": 6780,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6761,
                "modifierName": {
                  "id": 6760,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5567,
                  "src": "1305:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "1305:9:42"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6758,
                  "mutability": "mutable",
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 6780,
                  "src": "1267:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1267:7:42",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1266:15:42"
            },
            "returnParameters": {
              "id": 6762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1315:0:42"
            },
            "scope": 6813,
            "src": "1250:183:42",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6811,
              "nodeType": "Block",
              "src": "1937:158:42",
              "statements": [
                {
                  "assignments": [
                    6789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6789,
                      "mutability": "mutable",
                      "name": "payment",
                      "nodeType": "VariableDeclaration",
                      "scope": 6811,
                      "src": "1947:15:42",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6788,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1947:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6793,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6790,
                      "name": "_deposits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6743,
                      "src": "1965:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 6792,
                    "indexExpression": {
                      "id": 6791,
                      "name": "payee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6783,
                      "src": "1975:5:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1965:16:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1947:34:42"
                },
                {
                  "expression": {
                    "id": 6798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6794,
                        "name": "_deposits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6743,
                        "src": "1992:9:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6796,
                      "indexExpression": {
                        "id": 6795,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6783,
                        "src": "2002:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1992:16:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 6797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2011:1:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1992:20:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6799,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:20:42"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6803,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6789,
                        "src": "2039:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6800,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6783,
                        "src": "2023:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 6802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5942,
                      "src": "2023:15:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 6804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2023:24:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6805,
                  "nodeType": "ExpressionStatement",
                  "src": "2023:24:42"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6807,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6783,
                        "src": "2073:5:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 6808,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6789,
                        "src": "2080:7:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6806,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6739,
                      "src": "2063:9:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2063:25:42",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6810,
                  "nodeType": "EmitStatement",
                  "src": "2058:30:42"
                }
              ]
            },
            "documentation": {
              "id": 6781,
              "nodeType": "StructuredDocumentation",
              "src": "1439:427:42",
              "text": " @dev Withdraw accumulated balance for a payee, forwarding all gas to the\n recipient.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n @param payee The address whose funds will be withdrawn and transferred to."
            },
            "functionSelector": "51cff8d9",
            "id": 6812,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6786,
                "modifierName": {
                  "id": 6785,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5567,
                  "src": "1927:9:42"
                },
                "nodeType": "ModifierInvocation",
                "src": "1927:9:42"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6783,
                  "mutability": "mutable",
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 6812,
                  "src": "1889:21:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 6782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1889:15:42",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1888:23:42"
            },
            "returnParameters": {
              "id": 6787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1937:0:42"
            },
            "scope": 6813,
            "src": "1871:224:42",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 6814,
        "src": "751:1346:42"
      }
    ],
    "src": "33:2065:42"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-03T10:49:23.605Z",
  "devdoc": {
    "details": "Base escrow contract, holds funds designated for a payee until they withdraw them. Intended usage: This contract (and derived escrow contracts) should be a standalone contract, that only interacts with the contract that instantiated it. That way, it is guaranteed that all Ether will be handled according to the `Escrow` rules, and there is no need to check for payable functions or transfers in the inheritance tree. The contract that uses the escrow as its payment method should be its owner, and provide public methods redirecting to the escrow's deposit and withdraw.",
    "kind": "dev",
    "methods": {
      "deposit(address)": {
        "details": "Stores the sent amount as credit to be withdrawn.",
        "params": {
          "payee": "The destination address of the funds."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(address)": {
        "details": "Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.",
        "params": {
          "payee": "The address whose funds will be withdrawn and transferred to."
        }
      }
    },
    "title": "Escrow",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}