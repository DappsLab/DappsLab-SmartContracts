{
  "contractName": "RefundEscrow",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "beneficiary_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RefundsClosed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RefundsEnabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "payee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "depositsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum RefundEscrow.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "refundee",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableRefunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiaryWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "withdrawalAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"beneficiary_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RefundsClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RefundsEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiaryWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"refundee\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"depositsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableRefunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum RefundEscrow.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawalAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Escrow that holds funds for a beneficiary, deposited from multiple parties.Intended usage: See {Escrow}. Same usage guidelines apply here.The owner account (that is, the contract that instantiates this contract) may deposit, close the deposit period, and allow for either withdrawal by the beneficiary, or refunds to the depositors. All interactions with `RefundEscrow` will be made through the owner contract.\",\"kind\":\"dev\",\"methods\":{\"beneficiary()\":{\"returns\":{\"_0\":\"The beneficiary of the escrow.\"}},\"beneficiaryWithdraw()\":{\"details\":\"Withdraws the beneficiary's funds.\"},\"close()\":{\"details\":\"Allows for the beneficiary to withdraw their funds, rejecting further deposits.\"},\"constructor\":{\"details\":\"Constructor.\",\"params\":{\"beneficiary_\":\"The beneficiary of the deposits.\"}},\"deposit(address)\":{\"details\":\"Stores funds that may later be refunded.\",\"params\":{\"refundee\":\"The address funds will be sent to if a refund occurs.\"}},\"enableRefunds()\":{\"details\":\"Allows for refunds to take place, rejecting further deposits.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"state()\":{\"returns\":{\"_0\":\"The current state of the escrow.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(address)\":{\"details\":\"Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"The address whose funds will be withdrawn and transferred to.\"}},\"withdrawalAllowed(address)\":{\"details\":\"Returns whether refundees can withdraw their deposits (be refunded). The overridden function receives a 'payee' argument, but we ignore it here since the condition is global, not per-payee.\"}},\"title\":\"RefundEscrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/customERC20ERC721/utils/escrow/RefundEscrow.sol\":\"RefundEscrow\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/customERC20ERC721/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"project:/contracts/customERC20ERC721/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"project:/contracts/customERC20ERC721/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"project:/contracts/customERC20ERC721/utils/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0x0bf0f9c9bfdea4be5d7dc3f1fccf177de0a5e7da51f96bfe5923af8ad1961a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475920b50f6082a8d87a140cc5528bfc98c1f3efb8e2c367f93a1e482cea24a6\",\"dweb:/ipfs/QmVEUrKPdy3vgPjjzsikKLETUBFRo6uKbrgn2zeaJt7Mcu\"]},\"project:/contracts/customERC20ERC721/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xaf3f0d87fb0237dc255183be425f45fc902b343494d8a083878eb615211cc789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271399b7a3f92a81525320ccb879999cfd58cd5ce9f7e1cc29c995fc494bd08f\",\"dweb:/ipfs/QmNoB7sWcRJyJLwDeXttzKcxdUzZAKij4oAZUgcBAGZawj\"]},\"project:/contracts/customERC20ERC721/utils/escrow/RefundEscrow.sol\":{\"keccak256\":\"0xf716509efeb3dc8ce0ae09982632f90316363d6d0ada9b64867e4bbeed7e015a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0f671a7d1fdf840230ae8416349a593a6ec61f3706370fbf08e185dfe5d1917\",\"dweb:/ipfs/QmRZRKRuryh6xSULsqQvnm7PUsjfL1y2UeAhRmPRn1MZjJ\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610e15380380610e1583398101604081905261002f91610118565b6100516100436401000000006100c4810204565b6401000000006100c8810204565b600160a060020a03811661009a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009190610146565b60405180910390fd5b600160a060020a03166c01000000000000000000000000026080526002805460ff191690556101a3565b3390565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610129578081fd5b8151600160a060020a038116811461013f578182fd5b9392505050565b6020808252602d908201527f526566756e64457363726f773a2062656e65666963696172792069732074686560408201527f207a65726f206164647265737300000000000000000000000000000000000000606082015260800190565b6080516c010000000000000000000000009004610c476101ce60003960006102300152610c476000f3fe6080604052600436106100c4576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b116100815780638da5cb5b146101825780639af6549a14610197578063c19d93fb146101ac578063e3a9db1a146101ce578063f2fde38b146101fb578063f340fa011461021b576100c4565b806338af3eed146100c957806343d726d6146100f457806351cff8d91461010b578063685ca1941461012b578063715018a6146101585780638c52dc411461016d575b600080fd5b3480156100d557600080fd5b506100de61022e565b6040516100eb919061088b565b60405180910390f35b34801561010057600080fd5b50610109610252565b005b34801561011757600080fd5b50610109610126366004610865565b610320565b34801561013757600080fd5b5061014b610146366004610865565b610354565b6040516100eb919061089f565b34801561016457600080fd5b50610109610389565b34801561017957600080fd5b506101096103d7565b34801561018e57600080fd5b506100de61049d565b3480156101a357600080fd5b506101096104ac565b3480156101b857600080fd5b506101c1610514565b6040516100eb91906108aa565b3480156101da57600080fd5b506101ee6101e9366004610865565b61051d565b6040516100eb9190610bcc565b34801561020757600080fd5b50610109610216366004610865565b610538565b610109610229366004610865565b6105ac565b7f000000000000000000000000000000000000000000000000000000000000000090565b61025a610601565b600160a060020a031661026b61049d565b600160a060020a03161461029d5760405160e560020a62461bcd02815260040161029490610b3a565b60405180910390fd5b60006102a7610514565b60028111156102c95760e060020a634e487b7102600052602160045260246000fd5b146102e95760405160e560020a62461bcd02815260040161029490610add565b6002805460ff1916811790556040517f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f90600090a1565b61032981610354565b6103485760405160e560020a62461bcd02815260040161029490610a80565b61035181610605565b50565b60006001610360610514565b60028111156103825760e060020a634e487b7102600052602160045260246000fd5b1492915050565b610391610601565b600160a060020a03166103a261049d565b600160a060020a0316146103cb5760405160e560020a62461bcd02815260040161029490610b3a565b6103d560006106b4565b565b6103df610601565b600160a060020a03166103f061049d565b600160a060020a0316146104195760405160e560020a62461bcd02815260040161029490610b3a565b6000610423610514565b60028111156104455760e060020a634e487b7102600052602160045260246000fd5b146104655760405160e560020a62461bcd02815260040161029490610b6f565b6002805460ff191660011790556040517f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8990600090a1565b600054600160a060020a031690565b60026104b6610514565b60028111156104d85760e060020a634e487b7102600052602160045260246000fd5b146104f85760405160e560020a62461bcd028152600401610294906108d5565b6103d5303161050561022e565b600160a060020a031690610711565b60025460ff1690565b600160a060020a031660009081526001602052604090205490565b610540610601565b600160a060020a031661055161049d565b600160a060020a03161461057a5760405160e560020a62461bcd02815260040161029490610b3a565b600160a060020a0381166105a35760405160e560020a62461bcd02815260040161029490610932565b610351816106b4565b60006105b6610514565b60028111156105d85760e060020a634e487b7102600052602160045260246000fd5b146105f85760405160e560020a62461bcd02815260040161029490610a23565b610351816107b9565b3390565b61060d610601565b600160a060020a031661061e61049d565b600160a060020a0316146106475760405160e560020a62461bcd02815260040161029490610b3a565b600160a060020a038116600081815260016020526040812080549190559061066f9082610711565b81600160a060020a03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516106a89190610bcc565b60405180910390a25050565b60008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b30318111156107355760405160e560020a62461bcd028152600401610294906109ec565b600082600160a060020a03168260405161074e90610888565b60006040518083038185875af1925050503d806000811461078b576040519150601f19603f3d011682016040523d82523d6000602084013e610790565b606091505b50509050806107b45760405160e560020a62461bcd0281526004016102949061098f565b505050565b6107c1610601565b600160a060020a03166107d261049d565b600160a060020a0316146107fb5760405160e560020a62461bcd02815260040161029490610b3a565b600160a060020a038116600090815260016020526040812080543492839291610825908490610bd5565b9250508190555081600160a060020a03167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040516106a89190610bcc565b600060208284031215610876578081fd5b813561088181610bfc565b9392505050565b90565b600160a060020a0391909116815260200190565b901515815260200190565b60208101600383106108cf5760e060020a634e487b7102600052602160045260246000fd5b91905290565b60208082526038908201527f526566756e64457363726f773a2062656e65666963696172792063616e206f6e60408201527f6c79207769746864726177207768696c6520636c6f7365640000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252603a908201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260408201527f6563697069656e74206d61792068617665207265766572746564000000000000606082015260800190565b6020808252601d908201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604082015260600190565b6020808252602b908201527f526566756e64457363726f773a2063616e206f6e6c79206465706f736974207760408201527f68696c6520616374697665000000000000000000000000000000000000000000606082015260800190565b60208082526033908201527f436f6e646974696f6e616c457363726f773a207061796565206973206e6f742060408201527f616c6c6f77656420746f20776974686472617700000000000000000000000000606082015260800190565b60208082526029908201527f526566756e64457363726f773a2063616e206f6e6c7920636c6f73652077686960408201527f6c65206163746976650000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526032908201527f526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726560408201527f66756e6473207768696c65206163746976650000000000000000000000000000606082015260800190565b90815260200190565b60008219821115610bf75760e060020a634e487b710281526011600452602481fd5b500190565b600160a060020a038116811461035157600080fdfea2646970667358221220d0adf7b33cee8cee6cdf170ac98eb0da98741bb45434787950da84bc73e3971964736f6c63430008000033",
  "deployedBytecode": "0x6080604052600436106100c4576000357c0100000000000000000000000000000000000000000000000000000000900480638da5cb5b116100815780638da5cb5b146101825780639af6549a14610197578063c19d93fb146101ac578063e3a9db1a146101ce578063f2fde38b146101fb578063f340fa011461021b576100c4565b806338af3eed146100c957806343d726d6146100f457806351cff8d91461010b578063685ca1941461012b578063715018a6146101585780638c52dc411461016d575b600080fd5b3480156100d557600080fd5b506100de61022e565b6040516100eb919061088b565b60405180910390f35b34801561010057600080fd5b50610109610252565b005b34801561011757600080fd5b50610109610126366004610865565b610320565b34801561013757600080fd5b5061014b610146366004610865565b610354565b6040516100eb919061089f565b34801561016457600080fd5b50610109610389565b34801561017957600080fd5b506101096103d7565b34801561018e57600080fd5b506100de61049d565b3480156101a357600080fd5b506101096104ac565b3480156101b857600080fd5b506101c1610514565b6040516100eb91906108aa565b3480156101da57600080fd5b506101ee6101e9366004610865565b61051d565b6040516100eb9190610bcc565b34801561020757600080fd5b50610109610216366004610865565b610538565b610109610229366004610865565b6105ac565b7f000000000000000000000000000000000000000000000000000000000000000090565b61025a610601565b600160a060020a031661026b61049d565b600160a060020a03161461029d5760405160e560020a62461bcd02815260040161029490610b3a565b60405180910390fd5b60006102a7610514565b60028111156102c95760e060020a634e487b7102600052602160045260246000fd5b146102e95760405160e560020a62461bcd02815260040161029490610add565b6002805460ff1916811790556040517f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f90600090a1565b61032981610354565b6103485760405160e560020a62461bcd02815260040161029490610a80565b61035181610605565b50565b60006001610360610514565b60028111156103825760e060020a634e487b7102600052602160045260246000fd5b1492915050565b610391610601565b600160a060020a03166103a261049d565b600160a060020a0316146103cb5760405160e560020a62461bcd02815260040161029490610b3a565b6103d560006106b4565b565b6103df610601565b600160a060020a03166103f061049d565b600160a060020a0316146104195760405160e560020a62461bcd02815260040161029490610b3a565b6000610423610514565b60028111156104455760e060020a634e487b7102600052602160045260246000fd5b146104655760405160e560020a62461bcd02815260040161029490610b6f565b6002805460ff191660011790556040517f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8990600090a1565b600054600160a060020a031690565b60026104b6610514565b60028111156104d85760e060020a634e487b7102600052602160045260246000fd5b146104f85760405160e560020a62461bcd028152600401610294906108d5565b6103d5303161050561022e565b600160a060020a031690610711565b60025460ff1690565b600160a060020a031660009081526001602052604090205490565b610540610601565b600160a060020a031661055161049d565b600160a060020a03161461057a5760405160e560020a62461bcd02815260040161029490610b3a565b600160a060020a0381166105a35760405160e560020a62461bcd02815260040161029490610932565b610351816106b4565b60006105b6610514565b60028111156105d85760e060020a634e487b7102600052602160045260246000fd5b146105f85760405160e560020a62461bcd02815260040161029490610a23565b610351816107b9565b3390565b61060d610601565b600160a060020a031661061e61049d565b600160a060020a0316146106475760405160e560020a62461bcd02815260040161029490610b3a565b600160a060020a038116600081815260016020526040812080549190559061066f9082610711565b81600160a060020a03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516106a89190610bcc565b60405180910390a25050565b60008054600160a060020a0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b30318111156107355760405160e560020a62461bcd028152600401610294906109ec565b600082600160a060020a03168260405161074e90610888565b60006040518083038185875af1925050503d806000811461078b576040519150601f19603f3d011682016040523d82523d6000602084013e610790565b606091505b50509050806107b45760405160e560020a62461bcd0281526004016102949061098f565b505050565b6107c1610601565b600160a060020a03166107d261049d565b600160a060020a0316146107fb5760405160e560020a62461bcd02815260040161029490610b3a565b600160a060020a038116600090815260016020526040812080543492839291610825908490610bd5565b9250508190555081600160a060020a03167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040516106a89190610bcc565b600060208284031215610876578081fd5b813561088181610bfc565b9392505050565b90565b600160a060020a0391909116815260200190565b901515815260200190565b60208101600383106108cf5760e060020a634e487b7102600052602160045260246000fd5b91905290565b60208082526038908201527f526566756e64457363726f773a2062656e65666963696172792063616e206f6e60408201527f6c79207769746864726177207768696c6520636c6f7365640000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252603a908201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260408201527f6563697069656e74206d61792068617665207265766572746564000000000000606082015260800190565b6020808252601d908201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604082015260600190565b6020808252602b908201527f526566756e64457363726f773a2063616e206f6e6c79206465706f736974207760408201527f68696c6520616374697665000000000000000000000000000000000000000000606082015260800190565b60208082526033908201527f436f6e646974696f6e616c457363726f773a207061796565206973206e6f742060408201527f616c6c6f77656420746f20776974686472617700000000000000000000000000606082015260800190565b60208082526029908201527f526566756e64457363726f773a2063616e206f6e6c7920636c6f73652077686960408201527f6c65206163746976650000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526032908201527f526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726560408201527f66756e6473207768696c65206163746976650000000000000000000000000000606082015260800190565b90815260200190565b60008219821115610bf75760e060020a634e487b710281526011600452602481fd5b500190565b600160a060020a038116811461035157600080fdfea2646970667358221220d0adf7b33cee8cee6cdf170ac98eb0da98741bb45434787950da84bc73e3971964736f6c63430008000033",
  "immutableReferences": {
    "6344": [
      {
        "length": 32,
        "start": 560
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:748:58",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:58",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "103:229:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "149:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "166:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "151:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "151:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "151:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "124:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "133:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "120:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "120:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "145:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "116:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "113:2:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "184:29:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "203:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "197:5:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "197:16:58"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "188:5:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "276:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "293:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "278:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "278:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "278:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "235:5:58"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "246:5:58"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "261:1:58",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "264:3:58",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "257:3:58"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "257:11:58"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "270:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "253:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "253:19:58"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "242:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "242:31:58"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "232:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "232:42:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "225:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:50:58"
                  },
                  "nodeType": "YulIf",
                  "src": "222:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "311:15:58",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "321:5:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "311:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "69:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "80:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "92:6:58",
                "type": ""
              }
            ],
            "src": "14:318:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:235:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "528:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "539:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "521:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "521:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "562:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "573:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "558:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "558:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "578:2:58",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "551:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "551:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "601:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "612:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "597:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "597:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "617:34:58",
                        "type": "",
                        "value": "RefundEscrow: beneficiary is the"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "590:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "590:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "590:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "672:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "683:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "668:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "668:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "688:15:58",
                        "type": "",
                        "value": " zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "661:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:43:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "661:43:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "713:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "725:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "736:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "721:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "721:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "713:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "488:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "502:4:58",
                "type": ""
              }
            ],
            "src": "337:409:58"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_payable_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"RefundEscrow: beneficiary is the\")\n        mstore(add(headStart, 96), \" zero address\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 58,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6100:58",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:58",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:189:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:58"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "237:5:58"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:26:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:33:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:33:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "252:15:58",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "262:5:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "252:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:58",
                "type": ""
              }
            ],
            "src": "14:259:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "356:189:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "402:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "411:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "419:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "404:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "404:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "404:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "377:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "386:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "373:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "373:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "398:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "369:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "369:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "366:2:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "437:36:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "463:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "450:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "450:23:58"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "441:5:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "509:5:58"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "482:26:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "482:33:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "482:33:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "524:15:58",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "534:5:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "524:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "322:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "333:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "345:6:58",
                "type": ""
              }
            ],
            "src": "278:267:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:14:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "743:10:58",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "750:3:58"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "743:3:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "725:3:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "733:3:58",
                "type": ""
              }
            ],
            "src": "550:205:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "861:125:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "871:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "883:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "894:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "879:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "871:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "913:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "928:6:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "936:42:58",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:55:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "906:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "906:74:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "906:74:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "830:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "841:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "852:4:58",
                "type": ""
              }
            ],
            "src": "760:226:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1108:125:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1118:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1130:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1141:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1126:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1126:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1118:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1160:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1175:6:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1183:42:58",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1171:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1171:55:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1153:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1153:74:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1153:74:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1077:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1088:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1099:4:58",
                "type": ""
              }
            ],
            "src": "991:242:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1333:92:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1343:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1355:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1366:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1351:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1351:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1343:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1385:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1410:6:58"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1403:6:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1403:14:58"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1396:6:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1396:22:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1378:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1378:41:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1378:41:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1302:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1313:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1324:4:58",
                "type": ""
              }
            ],
            "src": "1238:187:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1539:286:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1549:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1561:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1572:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1557:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1557:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1549:4:58"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1617:168:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1638:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1641:77:58",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1631:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1631:88:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1631:88:58"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1739:1:58",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1742:4:58",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1732:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1732:15:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1732:15:58"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1767:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1770:4:58",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1760:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1760:15:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1760:15:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1597:6:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1605:1:58",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1594:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1594:13:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1587:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1587:21:58"
                  },
                  "nodeType": "YulIf",
                  "src": "1584:2:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1801:9:58"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1812:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1794:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1794:25:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1794:25:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_State_$6335__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1508:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1519:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1530:4:58",
                "type": ""
              }
            ],
            "src": "1430:395:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2004:246:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2021:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2032:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2014:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2014:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2014:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2055:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2066:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2051:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2051:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2071:2:58",
                        "type": "",
                        "value": "56"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2044:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2044:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2044:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2094:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2105:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2090:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2090:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2110:34:58",
                        "type": "",
                        "value": "RefundEscrow: beneficiary can on"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2083:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2083:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2083:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2165:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2176:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2161:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2161:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2181:26:58",
                        "type": "",
                        "value": "ly withdraw while closed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2154:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2154:54:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2154:54:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2217:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2229:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2240:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2225:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2225:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2217:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1981:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1995:4:58",
                "type": ""
              }
            ],
            "src": "1830:420:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2429:228:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2446:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2457:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2439:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2439:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2439:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2480:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2491:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2476:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2476:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2496:2:58",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2469:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2469:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2469:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2519:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2530:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2515:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2515:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2535:34:58",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2508:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2508:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2508:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2590:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2601:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2586:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2586:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2606:8:58",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2579:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2579:36:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2579:36:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2624:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2636:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2647:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2632:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2632:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2624:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2406:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2420:4:58",
                "type": ""
              }
            ],
            "src": "2255:402:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2836:248:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2853:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2864:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2846:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2846:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2846:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2887:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2898:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2883:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2883:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2903:2:58",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2876:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2876:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2876:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2926:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2937:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2922:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2922:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2942:34:58",
                        "type": "",
                        "value": "Address: unable to send value, r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2915:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2915:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2915:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2997:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3008:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2993:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2993:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3013:28:58",
                        "type": "",
                        "value": "ecipient may have reverted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2986:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2986:56:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2986:56:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3051:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3063:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3074:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3059:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3059:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3051:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2813:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2827:4:58",
                "type": ""
              }
            ],
            "src": "2662:422:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3263:179:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3280:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3291:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3273:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3273:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3273:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3314:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3325:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3310:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3310:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3330:2:58",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3303:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3303:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3303:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3353:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3364:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3349:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3349:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3369:31:58",
                        "type": "",
                        "value": "Address: insufficient balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3342:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3342:59:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3342:59:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3410:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3422:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3433:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3418:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3418:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3410:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3240:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3254:4:58",
                "type": ""
              }
            ],
            "src": "3089:353:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3621:233:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3638:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3649:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3631:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3631:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3631:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3672:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3683:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3668:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3668:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3688:2:58",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3661:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3661:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3661:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3711:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3722:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3707:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3707:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3727:34:58",
                        "type": "",
                        "value": "RefundEscrow: can only deposit w"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3700:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3700:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3700:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3782:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3793:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3778:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3778:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3798:13:58",
                        "type": "",
                        "value": "hile active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3771:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3771:41:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3771:41:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3821:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3833:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3844:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3829:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3829:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3821:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3598:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3612:4:58",
                "type": ""
              }
            ],
            "src": "3447:407:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4033:241:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4050:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4061:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4043:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4043:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4043:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4084:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4095:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4080:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4080:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4100:2:58",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4073:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4073:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4073:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4123:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4134:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4119:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4119:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4139:34:58",
                        "type": "",
                        "value": "ConditionalEscrow: payee is not "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4112:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4112:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4112:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4194:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4205:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4190:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4190:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4210:21:58",
                        "type": "",
                        "value": "allowed to withdraw"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4183:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4183:49:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4183:49:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4241:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4253:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4264:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4249:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4249:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4241:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4010:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4024:4:58",
                "type": ""
              }
            ],
            "src": "3859:415:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4453:231:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4470:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4481:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4463:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4463:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4463:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4504:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4515:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4500:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4500:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4520:2:58",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4493:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4493:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4493:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4543:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4554:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4539:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4539:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4559:34:58",
                        "type": "",
                        "value": "RefundEscrow: can only close whi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4532:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4532:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4532:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4614:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4625:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4610:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4610:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4630:11:58",
                        "type": "",
                        "value": "le active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4603:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4603:39:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4603:39:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4651:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4663:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4674:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4659:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4659:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4651:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4430:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4444:4:58",
                "type": ""
              }
            ],
            "src": "4279:405:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4863:182:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4880:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4891:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4873:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4873:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4873:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4914:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4925:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4910:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4910:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4930:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4903:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4903:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4903:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4953:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4964:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4949:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4949:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4969:34:58",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4942:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4942:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4942:62:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5013:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5025:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5036:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5021:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5021:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5013:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4840:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4854:4:58",
                "type": ""
              }
            ],
            "src": "4689:356:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5224:240:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5241:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5252:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5234:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5234:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5234:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5275:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5286:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5271:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5271:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5291:2:58",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5264:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5264:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5264:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5314:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5325:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5310:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5310:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5330:34:58",
                        "type": "",
                        "value": "RefundEscrow: can only enable re"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5303:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5303:62:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5303:62:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5385:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5396:2:58",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5381:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5381:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5401:20:58",
                        "type": "",
                        "value": "funds while active"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5374:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5374:48:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5374:48:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5431:27:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5443:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5454:3:58",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5439:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5439:19:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5431:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5201:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5215:4:58",
                "type": ""
              }
            ],
            "src": "5050:414:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5570:76:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5580:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5592:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5603:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5588:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5588:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5580:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5622:9:58"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5633:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5615:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5615:25:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5615:25:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5539:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5550:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5561:4:58",
                "type": ""
              }
            ],
            "src": "5469:177:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5699:238:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5734:172:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "5755:3:58"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5760:77:58",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5748:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5748:90:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5748:90:58"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5858:1:58",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5861:4:58",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5851:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5851:15:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5851:15:58"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "5886:3:58"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5891:4:58",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5879:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5879:17:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5879:17:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5715:1:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5722:1:58"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5718:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5718:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5712:2:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5712:13:58"
                  },
                  "nodeType": "YulIf",
                  "src": "5709:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5915:16:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5926:1:58"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5929:1:58"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5922:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5922:9:58"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5915:3:58"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5682:1:58",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5685:1:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5691:3:58",
                "type": ""
              }
            ],
            "src": "5651:286:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5989:109:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6076:16:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6085:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6088:1:58",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6078:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6078:12:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6078:12:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6012:5:58"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6023:5:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6030:42:58",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6019:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6019:54:58"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6009:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6009:65:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6002:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6002:73:58"
                  },
                  "nodeType": "YulIf",
                  "src": "5999:2:58"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5978:5:58",
                "type": ""
              }
            ],
            "src": "5942:156:58"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_enum$_State_$6335__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"RefundEscrow: beneficiary can on\")\n        mstore(add(headStart, 96), \"ly withdraw while closed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Address: unable to send value, r\")\n        mstore(add(headStart, 96), \"ecipient may have reverted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"RefundEscrow: can only deposit w\")\n        mstore(add(headStart, 96), \"hile active\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ab85541a5cdc1a44c30d5b8b58432efbc37ed9be825439a16d2e39ce610814a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"ConditionalEscrow: payee is not \")\n        mstore(add(headStart, 96), \"allowed to withdraw\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"RefundEscrow: can only close whi\")\n        mstore(add(headStart, 96), \"le active\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"RefundEscrow: can only enable re\")\n        mstore(add(headStart, 96), \"funds while active\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n}",
      "id": 58,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "573:2551:43:-:0;;;972:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:28;877:12;:10;;;;:12;:::i;:::-;867:9;;;;:23;:::i;:::-;-1:-1:-1;;;;;1032:26:43;;1024:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1118:27:43;;;;;1155:6;:21;;-1:-1:-1;;1155:21:43;;;573:2551;;586:96:36;665:10;586:96;:::o;2041:169:28:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:28;;;-1:-1:-1;;;;;;2131:17:28;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;14:318:58:-;;145:2;133:9;124:7;120:23;116:32;113:2;;;166:6;158;151:22;113:2;197:16;;-1:-1:-1;;;;;242:31:58;;232:42;;222:2;;293:6;285;278:22;222:2;321:5;103:229;-1:-1:-1;;;103:229:58:o;337:409::-;539:2;521:21;;;578:2;558:18;;;551:30;617:34;612:2;597:18;;590:62;688:15;683:2;668:18;;661:43;736:3;721:19;;511:235::o;:::-;573:2551:43;;;;;;;;;;;;;",
  "deployedSourceMap": "573:2551:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1404:105;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1978:197;;;;;;;;;;;;;:::i;:::-;;598:201:41;;;;;;;;;;-1:-1:-1;598:201:41;;;;;:::i;:::-;;:::i;3000:122:43:-;;;;;;;;;;-1:-1:-1;3000:122:43;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1605:92:28:-;;;;;;;;;;;;;:::i;2271:218:43:-;;;;;;;;;;;;;:::i;973:85:28:-;;;;;;;;;;;;;:::i;2558:211:43:-;;;;;;;;;;;;;:::i;1253:83::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1003:105:42:-;;;;;;;;;;-1:-1:-1;1003:105:42;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1846:189:28:-;;;;;;;;;;-1:-1:-1;1846:189:28;;;;;:::i;:::-;;:::i;1661:196:43:-;;;;;;:::i;:::-;;:::i;1404:105::-;1490:12;1404:105;:::o;1978:197::-;1196:12:28;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:28;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:28;;1177:68;;;;-1:-1:-1;;;;;1177:68:28;;;;;;;:::i;:::-;;;;;;;;;2049:12:43::1;2038:7;:5;:7::i;:::-;:23;;;;;;-1:-1:-1::0;;;;;2038:23:43::1;;;;;;;;;;2030:77;;;;-1:-1:-1::0;;;;;2030:77:43::1;;;;;;;:::i;:::-;2126:12;2117:21:::0;;-1:-1:-1;;2117:21:43::1;::::0;::::1;::::0;;2153:15:::1;::::0;::::1;::::0;-1:-1:-1;;2153:15:43::1;1978:197::o:0;598:201:41:-;681:24;699:5;681:17;:24::i;:::-;673:88;;;;-1:-1:-1;;;;;673:88:41;;;;;;;:::i;:::-;771:21;786:5;771:14;:21::i;:::-;598:201;:::o;3000:122:43:-;3066:4;3100:15;3089:7;:5;:7::i;:::-;:26;;;;;;-1:-1:-1;;;;;3089:26:43;;;;;;;;;;;3000:122;-1:-1:-1;;3000:122:43:o;1605:92:28:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:28;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:28;;1177:68;;;;-1:-1:-1;;;;;1177:68:28;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;2271:218:43:-;1196:12:28;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:28;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:28;;1177:68;;;;-1:-1:-1;;;;;1177:68:28;;;;;;;:::i;:::-;2350:12:43::1;2339:7;:5;:7::i;:::-;:23;;;;;;-1:-1:-1::0;;;;;2339:23:43::1;;;;;;;;;;2331:86;;;;-1:-1:-1::0;;;;;2331:86:43::1;;;;;;;:::i;:::-;2427:6;:24:::0;;-1:-1:-1;;2427:24:43::1;2436:15;2427:24;::::0;;2466:16:::1;::::0;::::1;::::0;-1:-1:-1;;2466:16:43::1;2271:218::o:0;973:85:28:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:28;973:85;:::o;2558:211:43:-;2633:12;2622:7;:5;:7::i;:::-;:23;;;;;;-1:-1:-1;;;;;2622:23:43;;;;;;;;;;2614:92;;;;-1:-1:-1;;;;;2614:92:43;;;;;;;:::i;:::-;2716:46;2748:4;2740:21;2716:13;:11;:13::i;:::-;-1:-1:-1;;;;;2716:23:43;;;:46::i;1253:83::-;1323:6;;;;1253:83;:::o;1003:105:42:-;-1:-1:-1;;;;;1085:16:42;1059:7;1085:16;;;:9;:16;;;;;;;1003:105::o;1846:189:28:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:28;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:28;;1177:68;;;;-1:-1:-1;;;;;1177:68:28;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:28;::::1;1926:73;;;;-1:-1:-1::0;;;;;1926:73:28::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;1661:196:43:-:0;1757:12;1746:7;:5;:7::i;:::-;:23;;;;;;-1:-1:-1;;;;;1746:23:43;;;;;;;;;;1738:79;;;;-1:-1:-1;;;;;1738:79:43;;;;;;;:::i;:::-;1827:23;1841:8;1827:13;:23::i;586:96:36:-;665:10;586:96;:::o;1871:224:42:-;1196:12:28;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:28;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:28;;1177:68;;;;-1:-1:-1;;;;;1177:68:28;;;;;;;:::i;:::-;-1:-1:-1;;;;;1965:16:42;::::1;1947:15;1965:16:::0;;;:9:::1;:16;::::0;;;;;;1992:20;;;1965:16;2023:24:::1;::::0;1965:16;2023:15:::1;:24::i;:::-;2073:5;-1:-1:-1::0;;;;;2063:25:42::1;;2080:7;2063:25;;;;;;:::i;:::-;;;;;;;;1255:1:28;1871:224:42::0;:::o;2041:169:28:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:28;;;-1:-1:-1;;2131:17:28;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;2012:312:34:-;2109:4;2101:21;:31;-1:-1:-1;2101:31:34;2093:73;;;;-1:-1:-1;;;;;2093:73:34;;;;;;;:::i;:::-;2178:12;2196:9;-1:-1:-1;;;;;2196:14:34;2218:6;2196:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2177:52;;;2247:7;2239:78;;;;-1:-1:-1;;;;;2239:78:34;;;;;;;:::i;:::-;2012:312;;;:::o;1250:183:42:-;1196:12:28;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:28;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:28;;1177:68;;;;-1:-1:-1;;;;;1177:68:28;;;;;;;:::i;:::-;-1:-1:-1;;;;;1361:16:42;::::1;1325:14;1361:16:::0;;;:9:::1;:16;::::0;;;;:26;;1342:9:::1;::::0;;;1361:16;:26:::1;::::0;1342:9;;1361:26:::1;:::i;:::-;;;;;;;;1412:5;-1:-1:-1::0;;;;;1402:24:42::1;;1419:6;1402:24;;;;;;:::i;14:259:58:-:0;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:58:o;550:205::-;750:3;741:14::o;760:226::-;-1:-1:-1;;;;;924:55:58;;;;906:74;;894:2;879:18;;861:125::o;1238:187::-;1403:14;;1396:22;1378:41;;1366:2;1351:18;;1333:92::o;1430:395::-;1572:2;1557:18;;1605:1;1594:13;;1584:2;;-1:-1:-1;;;;;1638:1:58;1631:88;1742:4;1739:1;1732:15;1770:4;1767:1;1760:15;1584:2;1794:25;;;1539:286;:::o;1830:420::-;2032:2;2014:21;;;2071:2;2051:18;;;2044:30;2110:34;2105:2;2090:18;;2083:62;2181:26;2176:2;2161:18;;2154:54;2240:3;2225:19;;2004:246::o;2255:402::-;2457:2;2439:21;;;2496:2;2476:18;;;2469:30;2535:34;2530:2;2515:18;;2508:62;2606:8;2601:2;2586:18;;2579:36;2647:3;2632:19;;2429:228::o;2662:422::-;2864:2;2846:21;;;2903:2;2883:18;;;2876:30;2942:34;2937:2;2922:18;;2915:62;3013:28;3008:2;2993:18;;2986:56;3074:3;3059:19;;2836:248::o;3089:353::-;3291:2;3273:21;;;3330:2;3310:18;;;3303:30;3369:31;3364:2;3349:18;;3342:59;3433:2;3418:18;;3263:179::o;3447:407::-;3649:2;3631:21;;;3688:2;3668:18;;;3661:30;3727:34;3722:2;3707:18;;3700:62;3798:13;3793:2;3778:18;;3771:41;3844:3;3829:19;;3621:233::o;3859:415::-;4061:2;4043:21;;;4100:2;4080:18;;;4073:30;4139:34;4134:2;4119:18;;4112:62;4210:21;4205:2;4190:18;;4183:49;4264:3;4249:19;;4033:241::o;4279:405::-;4481:2;4463:21;;;4520:2;4500:18;;;4493:30;4559:34;4554:2;4539:18;;4532:62;4630:11;4625:2;4610:18;;4603:39;4674:3;4659:19;;4453:231::o;4689:356::-;4891:2;4873:21;;;4910:18;;;4903:30;4969:34;4964:2;4949:18;;4942:62;5036:2;5021:18;;4863:182::o;5050:414::-;5252:2;5234:21;;;5291:2;5271:18;;;5264:30;5330:34;5325:2;5310:18;;5303:62;5401:20;5396:2;5381:18;;5374:48;5454:3;5439:19;;5224:240::o;5469:177::-;5615:25;;;5603:2;5588:18;;5570:76::o;5651:286::-;;5722:1;5718:6;5715:1;5712:13;5709:2;;;-1:-1:-1;;;;;5755:3:58;5748:90;5861:4;5858:1;5851:15;5891:4;5886:3;5879:17;5709:2;-1:-1:-1;5922:9:58;;5699:238::o;5942:156::-;-1:-1:-1;;;;;6023:5:58;6019:54;6012:5;6009:65;5999:2;;6088:1;6085;6078:12",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./ConditionalEscrow.sol\";\n\n/**\n * @title RefundEscrow\n * @dev Escrow that holds funds for a beneficiary, deposited from multiple\n * parties.\n * @dev Intended usage: See {Escrow}. Same usage guidelines apply here.\n * @dev The owner account (that is, the contract that instantiates this\n * contract) may deposit, close the deposit period, and allow for either\n * withdrawal by the beneficiary, or refunds to the depositors. All interactions\n * with `RefundEscrow` will be made through the owner contract.\n */\ncontract RefundEscrow is ConditionalEscrow {\n    using Address for address payable;\n\n    enum State {\n        Active,\n        Refunding,\n        Closed\n    }\n\n    event RefundsClosed();\n    event RefundsEnabled();\n\n    State private _state;\n    address payable private immutable _beneficiary;\n\n    /**\n     * @dev Constructor.\n     * @param beneficiary_ The beneficiary of the deposits.\n     */\n    constructor(address payable beneficiary_) {\n        require(beneficiary_ != address(0), \"RefundEscrow: beneficiary is the zero address\");\n        _beneficiary = beneficiary_;\n        _state = State.Active;\n    }\n\n    /**\n     * @return The current state of the escrow.\n     */\n    function state() public view virtual returns (State) {\n        return _state;\n    }\n\n    /**\n     * @return The beneficiary of the escrow.\n     */\n    function beneficiary() public view virtual returns (address payable) {\n        return _beneficiary;\n    }\n\n    /**\n     * @dev Stores funds that may later be refunded.\n     * @param refundee The address funds will be sent to if a refund occurs.\n     */\n    function deposit(address refundee) public payable virtual override {\n        require(state() == State.Active, \"RefundEscrow: can only deposit while active\");\n        super.deposit(refundee);\n    }\n\n    /**\n     * @dev Allows for the beneficiary to withdraw their funds, rejecting\n     * further deposits.\n     */\n    function close() public virtual onlyOwner {\n        require(state() == State.Active, \"RefundEscrow: can only close while active\");\n        _state = State.Closed;\n        emit RefundsClosed();\n    }\n\n    /**\n     * @dev Allows for refunds to take place, rejecting further deposits.\n     */\n    function enableRefunds() public virtual onlyOwner {\n        require(state() == State.Active, \"RefundEscrow: can only enable refunds while active\");\n        _state = State.Refunding;\n        emit RefundsEnabled();\n    }\n\n    /**\n     * @dev Withdraws the beneficiary's funds.\n     */\n    function beneficiaryWithdraw() public virtual {\n        require(state() == State.Closed, \"RefundEscrow: beneficiary can only withdraw while closed\");\n        beneficiary().sendValue(address(this).balance);\n    }\n\n    /**\n     * @dev Returns whether refundees can withdraw their deposits (be refunded). The overridden function receives a\n     * 'payee' argument, but we ignore it here since the condition is global, not per-payee.\n     */\n    function withdrawalAllowed(address) public view override returns (bool) {\n        return state() == State.Refunding;\n    }\n}\n",
  "sourcePath": "/Volumes/Transcend/Projects/DappsLab/Lottery-Smart-Contract/contracts/customERC20ERC721/utils/escrow/RefundEscrow.sol",
  "ast": {
    "absolutePath": "project:/contracts/customERC20ERC721/utils/escrow/RefundEscrow.sol",
    "exportedSymbols": {
      "Address": [
        5693
      ],
      "ConditionalEscrow": [
        6226
      ],
      "Context": [
        5799
      ],
      "Escrow": [
        6322
      ],
      "Ownable": [
        5133
      ],
      "RefundEscrow": [
        6501
      ]
    },
    "id": 6502,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6324,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:43"
      },
      {
        "absolutePath": "project:/contracts/customERC20ERC721/utils/escrow/ConditionalEscrow.sol",
        "file": "./ConditionalEscrow.sol",
        "id": 6325,
        "nodeType": "ImportDirective",
        "scope": 6502,
        "sourceUnit": 6227,
        "src": "58:33:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6327,
              "name": "ConditionalEscrow",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6226,
              "src": "598:17:43"
            },
            "id": 6328,
            "nodeType": "InheritanceSpecifier",
            "src": "598:17:43"
          }
        ],
        "contractDependencies": [
          5133,
          5799,
          6226,
          6322
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6326,
          "nodeType": "StructuredDocumentation",
          "src": "93:479:43",
          "text": " @title RefundEscrow\n @dev Escrow that holds funds for a beneficiary, deposited from multiple\n parties.\n @dev Intended usage: See {Escrow}. Same usage guidelines apply here.\n @dev The owner account (that is, the contract that instantiates this\n contract) may deposit, close the deposit period, and allow for either\n withdrawal by the beneficiary, or refunds to the depositors. All interactions\n with `RefundEscrow` will be made through the owner contract."
        },
        "fullyImplemented": true,
        "id": 6501,
        "linearizedBaseContracts": [
          6501,
          6226,
          6322,
          5133,
          5799
        ],
        "name": "RefundEscrow",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6331,
            "libraryName": {
              "id": 6329,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5693,
              "src": "628:7:43"
            },
            "nodeType": "UsingForDirective",
            "src": "622:34:43",
            "typeName": {
              "id": 6330,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "640:15:43",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "canonicalName": "RefundEscrow.State",
            "id": 6335,
            "members": [
              {
                "id": 6332,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "683:6:43"
              },
              {
                "id": 6333,
                "name": "Refunding",
                "nodeType": "EnumValue",
                "src": "699:9:43"
              },
              {
                "id": 6334,
                "name": "Closed",
                "nodeType": "EnumValue",
                "src": "718:6:43"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "662:68:43"
          },
          {
            "anonymous": false,
            "id": 6337,
            "name": "RefundsClosed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "755:2:43"
            },
            "src": "736:22:43"
          },
          {
            "anonymous": false,
            "id": 6339,
            "name": "RefundsEnabled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:2:43"
            },
            "src": "763:23:43"
          },
          {
            "constant": false,
            "id": 6342,
            "mutability": "mutable",
            "name": "_state",
            "nodeType": "VariableDeclaration",
            "scope": 6501,
            "src": "792:20:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$6335",
              "typeString": "enum RefundEscrow.State"
            },
            "typeName": {
              "id": 6341,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6340,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6335,
                "src": "792:5:43"
              },
              "referencedDeclaration": 6335,
              "src": "792:5:43",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$6335",
                "typeString": "enum RefundEscrow.State"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6344,
            "mutability": "immutable",
            "name": "_beneficiary",
            "nodeType": "VariableDeclaration",
            "scope": 6501,
            "src": "818:46:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 6343,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "818:15:43",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6369,
              "nodeType": "Block",
              "src": "1014:169:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6351,
                          "name": "beneficiary_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6347,
                          "src": "1032:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1056:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1048:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6352,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1048:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1048:10:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1032:26:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2062656e656669636961727920697320746865207a65726f2061646472657373",
                        "id": 6357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1060:47:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d",
                          "typeString": "literal_string \"RefundEscrow: beneficiary is the zero address\""
                        },
                        "value": "RefundEscrow: beneficiary is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d",
                          "typeString": "literal_string \"RefundEscrow: beneficiary is the zero address\""
                        }
                      ],
                      "id": 6350,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1024:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1024:84:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6359,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:84:43"
                },
                {
                  "expression": {
                    "id": 6362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6360,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6344,
                      "src": "1118:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6361,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6347,
                      "src": "1133:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1118:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 6363,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:27:43"
                },
                {
                  "expression": {
                    "id": 6367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6364,
                      "name": "_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6342,
                      "src": "1155:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6365,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6335,
                        "src": "1164:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 6366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "src": "1164:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "1155:21:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$6335",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "id": 6368,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:21:43"
                }
              ]
            },
            "documentation": {
              "id": 6345,
              "nodeType": "StructuredDocumentation",
              "src": "871:96:43",
              "text": " @dev Constructor.\n @param beneficiary_ The beneficiary of the deposits."
            },
            "id": 6370,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6347,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nodeType": "VariableDeclaration",
                  "scope": 6370,
                  "src": "984:28:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 6346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:15:43",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "983:30:43"
            },
            "returnParameters": {
              "id": 6349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:0:43"
            },
            "scope": 6501,
            "src": "972:211:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6379,
              "nodeType": "Block",
              "src": "1306:30:43",
              "statements": [
                {
                  "expression": {
                    "id": 6377,
                    "name": "_state",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6342,
                    "src": "1323:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$6335",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "functionReturnParameters": 6376,
                  "id": 6378,
                  "nodeType": "Return",
                  "src": "1316:13:43"
                }
              ]
            },
            "documentation": {
              "id": 6371,
              "nodeType": "StructuredDocumentation",
              "src": "1189:59:43",
              "text": " @return The current state of the escrow."
            },
            "functionSelector": "c19d93fb",
            "id": 6380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "state",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1267:2:43"
            },
            "returnParameters": {
              "id": 6376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6375,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6380,
                  "src": "1299:5:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$6335",
                    "typeString": "enum RefundEscrow.State"
                  },
                  "typeName": {
                    "id": 6374,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6373,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6335,
                      "src": "1299:5:43"
                    },
                    "referencedDeclaration": 6335,
                    "src": "1299:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$6335",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1298:7:43"
            },
            "scope": 6501,
            "src": "1253:83:43",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6388,
              "nodeType": "Block",
              "src": "1473:36:43",
              "statements": [
                {
                  "expression": {
                    "id": 6386,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6344,
                    "src": "1490:12:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 6385,
                  "id": 6387,
                  "nodeType": "Return",
                  "src": "1483:19:43"
                }
              ]
            },
            "documentation": {
              "id": 6381,
              "nodeType": "StructuredDocumentation",
              "src": "1342:57:43",
              "text": " @return The beneficiary of the escrow."
            },
            "functionSelector": "38af3eed",
            "id": 6389,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:2:43"
            },
            "returnParameters": {
              "id": 6385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6384,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6389,
                  "src": "1456:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 6383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:15:43",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1455:17:43"
            },
            "scope": 6501,
            "src": "1404:105:43",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6289
            ],
            "body": {
              "id": 6411,
              "nodeType": "Block",
              "src": "1728:129:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$6335",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 6401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6397,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6380,
                            "src": "1746:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$6335_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 6398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1746:7:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 6399,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6335,
                            "src": "1757:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 6400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "src": "1757:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "1746:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2063616e206f6e6c79206465706f736974207768696c6520616374697665",
                        "id": 6402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1771:45:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f",
                          "typeString": "literal_string \"RefundEscrow: can only deposit while active\""
                        },
                        "value": "RefundEscrow: can only deposit while active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f",
                          "typeString": "literal_string \"RefundEscrow: can only deposit while active\""
                        }
                      ],
                      "id": 6396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1738:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1738:79:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6404,
                  "nodeType": "ExpressionStatement",
                  "src": "1738:79:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6408,
                        "name": "refundee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6392,
                        "src": "1841:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6405,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1827:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RefundEscrow_$6501_$",
                          "typeString": "type(contract super RefundEscrow)"
                        }
                      },
                      "id": 6407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6289,
                      "src": "1827:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:23:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6410,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:23:43"
                }
              ]
            },
            "documentation": {
              "id": 6390,
              "nodeType": "StructuredDocumentation",
              "src": "1515:141:43",
              "text": " @dev Stores funds that may later be refunded.\n @param refundee The address funds will be sent to if a refund occurs."
            },
            "functionSelector": "f340fa01",
            "id": 6412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6394,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1719:8:43"
            },
            "parameters": {
              "id": 6393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6392,
                  "mutability": "mutable",
                  "name": "refundee",
                  "nodeType": "VariableDeclaration",
                  "scope": 6412,
                  "src": "1678:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1677:18:43"
            },
            "returnParameters": {
              "id": 6395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1728:0:43"
            },
            "scope": 6501,
            "src": "1661:196:43",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6435,
              "nodeType": "Block",
              "src": "2020:155:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$6335",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 6423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6419,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6380,
                            "src": "2038:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$6335_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 6420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2038:7:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 6421,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6335,
                            "src": "2049:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 6422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "src": "2049:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "2038:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2063616e206f6e6c7920636c6f7365207768696c6520616374697665",
                        "id": 6424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2063:43:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100",
                          "typeString": "literal_string \"RefundEscrow: can only close while active\""
                        },
                        "value": "RefundEscrow: can only close while active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100",
                          "typeString": "literal_string \"RefundEscrow: can only close while active\""
                        }
                      ],
                      "id": 6418,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2030:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2030:77:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6426,
                  "nodeType": "ExpressionStatement",
                  "src": "2030:77:43"
                },
                {
                  "expression": {
                    "id": 6430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6427,
                      "name": "_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6342,
                      "src": "2117:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6428,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6335,
                        "src": "2126:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 6429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Closed",
                      "nodeType": "MemberAccess",
                      "src": "2126:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "2117:21:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$6335",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "id": 6431,
                  "nodeType": "ExpressionStatement",
                  "src": "2117:21:43"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6432,
                      "name": "RefundsClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6337,
                      "src": "2153:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2153:15:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6434,
                  "nodeType": "EmitStatement",
                  "src": "2148:20:43"
                }
              ]
            },
            "documentation": {
              "id": 6413,
              "nodeType": "StructuredDocumentation",
              "src": "1863:110:43",
              "text": " @dev Allows for the beneficiary to withdraw their funds, rejecting\n further deposits."
            },
            "functionSelector": "43d726d6",
            "id": 6436,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6416,
                "modifierName": {
                  "id": 6415,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5076,
                  "src": "2010:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "2010:9:43"
              }
            ],
            "name": "close",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1992:2:43"
            },
            "returnParameters": {
              "id": 6417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2020:0:43"
            },
            "scope": 6501,
            "src": "1978:197:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6459,
              "nodeType": "Block",
              "src": "2321:168:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$6335",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 6447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6443,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6380,
                            "src": "2339:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$6335_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 6444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2339:7:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 6445,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6335,
                            "src": "2350:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 6446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "src": "2350:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "2339:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726566756e6473207768696c6520616374697665",
                        "id": 6448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2364:52:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200",
                          "typeString": "literal_string \"RefundEscrow: can only enable refunds while active\""
                        },
                        "value": "RefundEscrow: can only enable refunds while active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200",
                          "typeString": "literal_string \"RefundEscrow: can only enable refunds while active\""
                        }
                      ],
                      "id": 6442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2331:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:86:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6450,
                  "nodeType": "ExpressionStatement",
                  "src": "2331:86:43"
                },
                {
                  "expression": {
                    "id": 6454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6451,
                      "name": "_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6342,
                      "src": "2427:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6452,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6335,
                        "src": "2436:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 6453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Refunding",
                      "nodeType": "MemberAccess",
                      "src": "2436:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "2427:24:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$6335",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "id": 6455,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:24:43"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6456,
                      "name": "RefundsEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6339,
                      "src": "2466:14:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2466:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6458,
                  "nodeType": "EmitStatement",
                  "src": "2461:21:43"
                }
              ]
            },
            "documentation": {
              "id": 6437,
              "nodeType": "StructuredDocumentation",
              "src": "2181:85:43",
              "text": " @dev Allows for refunds to take place, rejecting further deposits."
            },
            "functionSelector": "8c52dc41",
            "id": 6460,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6440,
                "modifierName": {
                  "id": 6439,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5076,
                  "src": "2311:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "2311:9:43"
              }
            ],
            "name": "enableRefunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2293:2:43"
            },
            "returnParameters": {
              "id": 6441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2321:0:43"
            },
            "scope": 6501,
            "src": "2271:218:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6483,
              "nodeType": "Block",
              "src": "2604:165:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$6335",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 6469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6465,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6380,
                            "src": "2622:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$6335_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 6466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2622:7:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 6467,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6335,
                            "src": "2633:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 6468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Closed",
                          "nodeType": "MemberAccess",
                          "src": "2633:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "2622:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2062656e65666963696172792063616e206f6e6c79207769746864726177207768696c6520636c6f736564",
                        "id": 6470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2647:58:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc",
                          "typeString": "literal_string \"RefundEscrow: beneficiary can only withdraw while closed\""
                        },
                        "value": "RefundEscrow: beneficiary can only withdraw while closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc",
                          "typeString": "literal_string \"RefundEscrow: beneficiary can only withdraw while closed\""
                        }
                      ],
                      "id": 6464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2614:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2614:92:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6472,
                  "nodeType": "ExpressionStatement",
                  "src": "2614:92:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 6478,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2748:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$6501",
                                "typeString": "contract RefundEscrow"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RefundEscrow_$6501",
                                "typeString": "contract RefundEscrow"
                              }
                            ],
                            "id": 6477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2740:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6476,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2740:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2740:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 6480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2740:21:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6473,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6389,
                          "src": "2716:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 6474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2716:13:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 6475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5451,
                      "src": "2716:23:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 6481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2716:46:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6482,
                  "nodeType": "ExpressionStatement",
                  "src": "2716:46:43"
                }
              ]
            },
            "documentation": {
              "id": 6461,
              "nodeType": "StructuredDocumentation",
              "src": "2495:58:43",
              "text": " @dev Withdraws the beneficiary's funds."
            },
            "functionSelector": "9af6549a",
            "id": 6484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiaryWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2586:2:43"
            },
            "returnParameters": {
              "id": 6463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2604:0:43"
            },
            "scope": 6501,
            "src": "2558:211:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6205
            ],
            "body": {
              "id": 6499,
              "nodeType": "Block",
              "src": "3072:50:43",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$6335",
                      "typeString": "enum RefundEscrow.State"
                    },
                    "id": 6497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6493,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6380,
                        "src": "3089:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$6335_$",
                          "typeString": "function () view returns (enum RefundEscrow.State)"
                        }
                      },
                      "id": 6494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3089:7:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 6495,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6335,
                        "src": "3100:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 6496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Refunding",
                      "nodeType": "MemberAccess",
                      "src": "3100:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "3089:26:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6492,
                  "id": 6498,
                  "nodeType": "Return",
                  "src": "3082:33:43"
                }
              ]
            },
            "documentation": {
              "id": 6485,
              "nodeType": "StructuredDocumentation",
              "src": "2775:220:43",
              "text": " @dev Returns whether refundees can withdraw their deposits (be refunded). The overridden function receives a\n 'payee' argument, but we ignore it here since the condition is global, not per-payee."
            },
            "functionSelector": "685ca194",
            "id": 6500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawalAllowed",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6489,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3048:8:43"
            },
            "parameters": {
              "id": 6488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6487,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6500,
                  "src": "3027:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3027:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3026:9:43"
            },
            "returnParameters": {
              "id": 6492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6491,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6500,
                  "src": "3066:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6490,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3066:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3065:6:43"
            },
            "scope": 6501,
            "src": "3000:122:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6502,
        "src": "573:2551:43"
      }
    ],
    "src": "33:3092:43"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/customERC20ERC721/utils/escrow/RefundEscrow.sol",
    "exportedSymbols": {
      "Address": [
        5693
      ],
      "ConditionalEscrow": [
        6226
      ],
      "Context": [
        5799
      ],
      "Escrow": [
        6322
      ],
      "Ownable": [
        5133
      ],
      "RefundEscrow": [
        6501
      ]
    },
    "id": 6502,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6324,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:43"
      },
      {
        "absolutePath": "project:/contracts/customERC20ERC721/utils/escrow/ConditionalEscrow.sol",
        "file": "./ConditionalEscrow.sol",
        "id": 6325,
        "nodeType": "ImportDirective",
        "scope": 6502,
        "sourceUnit": 6227,
        "src": "58:33:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6327,
              "name": "ConditionalEscrow",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6226,
              "src": "598:17:43"
            },
            "id": 6328,
            "nodeType": "InheritanceSpecifier",
            "src": "598:17:43"
          }
        ],
        "contractDependencies": [
          5133,
          5799,
          6226,
          6322
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6326,
          "nodeType": "StructuredDocumentation",
          "src": "93:479:43",
          "text": " @title RefundEscrow\n @dev Escrow that holds funds for a beneficiary, deposited from multiple\n parties.\n @dev Intended usage: See {Escrow}. Same usage guidelines apply here.\n @dev The owner account (that is, the contract that instantiates this\n contract) may deposit, close the deposit period, and allow for either\n withdrawal by the beneficiary, or refunds to the depositors. All interactions\n with `RefundEscrow` will be made through the owner contract."
        },
        "fullyImplemented": true,
        "id": 6501,
        "linearizedBaseContracts": [
          6501,
          6226,
          6322,
          5133,
          5799
        ],
        "name": "RefundEscrow",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6331,
            "libraryName": {
              "id": 6329,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5693,
              "src": "628:7:43"
            },
            "nodeType": "UsingForDirective",
            "src": "622:34:43",
            "typeName": {
              "id": 6330,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "640:15:43",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            }
          },
          {
            "canonicalName": "RefundEscrow.State",
            "id": 6335,
            "members": [
              {
                "id": 6332,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "683:6:43"
              },
              {
                "id": 6333,
                "name": "Refunding",
                "nodeType": "EnumValue",
                "src": "699:9:43"
              },
              {
                "id": 6334,
                "name": "Closed",
                "nodeType": "EnumValue",
                "src": "718:6:43"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "662:68:43"
          },
          {
            "anonymous": false,
            "id": 6337,
            "name": "RefundsClosed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "755:2:43"
            },
            "src": "736:22:43"
          },
          {
            "anonymous": false,
            "id": 6339,
            "name": "RefundsEnabled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "783:2:43"
            },
            "src": "763:23:43"
          },
          {
            "constant": false,
            "id": 6342,
            "mutability": "mutable",
            "name": "_state",
            "nodeType": "VariableDeclaration",
            "scope": 6501,
            "src": "792:20:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$6335",
              "typeString": "enum RefundEscrow.State"
            },
            "typeName": {
              "id": 6341,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6340,
                "name": "State",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 6335,
                "src": "792:5:43"
              },
              "referencedDeclaration": 6335,
              "src": "792:5:43",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$6335",
                "typeString": "enum RefundEscrow.State"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6344,
            "mutability": "immutable",
            "name": "_beneficiary",
            "nodeType": "VariableDeclaration",
            "scope": 6501,
            "src": "818:46:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 6343,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "818:15:43",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6369,
              "nodeType": "Block",
              "src": "1014:169:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6351,
                          "name": "beneficiary_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6347,
                          "src": "1032:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1056:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1048:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6352,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1048:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1048:10:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1032:26:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2062656e656669636961727920697320746865207a65726f2061646472657373",
                        "id": 6357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1060:47:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d",
                          "typeString": "literal_string \"RefundEscrow: beneficiary is the zero address\""
                        },
                        "value": "RefundEscrow: beneficiary is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a77d0d3ca4410791e8781774e7ba61ae1755bbb27066c5d9f65089e2c7a8f1d",
                          "typeString": "literal_string \"RefundEscrow: beneficiary is the zero address\""
                        }
                      ],
                      "id": 6350,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1024:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1024:84:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6359,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:84:43"
                },
                {
                  "expression": {
                    "id": 6362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6360,
                      "name": "_beneficiary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6344,
                      "src": "1118:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6361,
                      "name": "beneficiary_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6347,
                      "src": "1133:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1118:27:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 6363,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:27:43"
                },
                {
                  "expression": {
                    "id": 6367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6364,
                      "name": "_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6342,
                      "src": "1155:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6365,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6335,
                        "src": "1164:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 6366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "src": "1164:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "1155:21:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$6335",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "id": 6368,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:21:43"
                }
              ]
            },
            "documentation": {
              "id": 6345,
              "nodeType": "StructuredDocumentation",
              "src": "871:96:43",
              "text": " @dev Constructor.\n @param beneficiary_ The beneficiary of the deposits."
            },
            "id": 6370,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6347,
                  "mutability": "mutable",
                  "name": "beneficiary_",
                  "nodeType": "VariableDeclaration",
                  "scope": 6370,
                  "src": "984:28:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 6346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:15:43",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "983:30:43"
            },
            "returnParameters": {
              "id": 6349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:0:43"
            },
            "scope": 6501,
            "src": "972:211:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6379,
              "nodeType": "Block",
              "src": "1306:30:43",
              "statements": [
                {
                  "expression": {
                    "id": 6377,
                    "name": "_state",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6342,
                    "src": "1323:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$6335",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "functionReturnParameters": 6376,
                  "id": 6378,
                  "nodeType": "Return",
                  "src": "1316:13:43"
                }
              ]
            },
            "documentation": {
              "id": 6371,
              "nodeType": "StructuredDocumentation",
              "src": "1189:59:43",
              "text": " @return The current state of the escrow."
            },
            "functionSelector": "c19d93fb",
            "id": 6380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "state",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1267:2:43"
            },
            "returnParameters": {
              "id": 6376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6375,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6380,
                  "src": "1299:5:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$6335",
                    "typeString": "enum RefundEscrow.State"
                  },
                  "typeName": {
                    "id": 6374,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6373,
                      "name": "State",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6335,
                      "src": "1299:5:43"
                    },
                    "referencedDeclaration": 6335,
                    "src": "1299:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$6335",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1298:7:43"
            },
            "scope": 6501,
            "src": "1253:83:43",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6388,
              "nodeType": "Block",
              "src": "1473:36:43",
              "statements": [
                {
                  "expression": {
                    "id": 6386,
                    "name": "_beneficiary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6344,
                    "src": "1490:12:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 6385,
                  "id": 6387,
                  "nodeType": "Return",
                  "src": "1483:19:43"
                }
              ]
            },
            "documentation": {
              "id": 6381,
              "nodeType": "StructuredDocumentation",
              "src": "1342:57:43",
              "text": " @return The beneficiary of the escrow."
            },
            "functionSelector": "38af3eed",
            "id": 6389,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:2:43"
            },
            "returnParameters": {
              "id": 6385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6384,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6389,
                  "src": "1456:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 6383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:15:43",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1455:17:43"
            },
            "scope": 6501,
            "src": "1404:105:43",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6289
            ],
            "body": {
              "id": 6411,
              "nodeType": "Block",
              "src": "1728:129:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$6335",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 6401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6397,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6380,
                            "src": "1746:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$6335_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 6398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1746:7:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 6399,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6335,
                            "src": "1757:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 6400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "src": "1757:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "1746:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2063616e206f6e6c79206465706f736974207768696c6520616374697665",
                        "id": 6402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1771:45:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f",
                          "typeString": "literal_string \"RefundEscrow: can only deposit while active\""
                        },
                        "value": "RefundEscrow: can only deposit while active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65d2eddec03fda23f4156a228b50726cf2ff6928b71d9dbcbc2607b547d1e19f",
                          "typeString": "literal_string \"RefundEscrow: can only deposit while active\""
                        }
                      ],
                      "id": 6396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1738:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1738:79:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6404,
                  "nodeType": "ExpressionStatement",
                  "src": "1738:79:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6408,
                        "name": "refundee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6392,
                        "src": "1841:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6405,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1827:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RefundEscrow_$6501_$",
                          "typeString": "type(contract super RefundEscrow)"
                        }
                      },
                      "id": 6407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6289,
                      "src": "1827:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 6409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:23:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6410,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:23:43"
                }
              ]
            },
            "documentation": {
              "id": 6390,
              "nodeType": "StructuredDocumentation",
              "src": "1515:141:43",
              "text": " @dev Stores funds that may later be refunded.\n @param refundee The address funds will be sent to if a refund occurs."
            },
            "functionSelector": "f340fa01",
            "id": 6412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6394,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1719:8:43"
            },
            "parameters": {
              "id": 6393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6392,
                  "mutability": "mutable",
                  "name": "refundee",
                  "nodeType": "VariableDeclaration",
                  "scope": 6412,
                  "src": "1678:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1677:18:43"
            },
            "returnParameters": {
              "id": 6395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1728:0:43"
            },
            "scope": 6501,
            "src": "1661:196:43",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6435,
              "nodeType": "Block",
              "src": "2020:155:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$6335",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 6423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6419,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6380,
                            "src": "2038:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$6335_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 6420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2038:7:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 6421,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6335,
                            "src": "2049:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 6422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "src": "2049:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "2038:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2063616e206f6e6c7920636c6f7365207768696c6520616374697665",
                        "id": 6424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2063:43:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100",
                          "typeString": "literal_string \"RefundEscrow: can only close while active\""
                        },
                        "value": "RefundEscrow: can only close while active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b57f36bbfb6b8cf96de8737d30d9d1cbc0f0335b9d71ea7602e79c09a766100",
                          "typeString": "literal_string \"RefundEscrow: can only close while active\""
                        }
                      ],
                      "id": 6418,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2030:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2030:77:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6426,
                  "nodeType": "ExpressionStatement",
                  "src": "2030:77:43"
                },
                {
                  "expression": {
                    "id": 6430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6427,
                      "name": "_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6342,
                      "src": "2117:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6428,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6335,
                        "src": "2126:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 6429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Closed",
                      "nodeType": "MemberAccess",
                      "src": "2126:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "2117:21:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$6335",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "id": 6431,
                  "nodeType": "ExpressionStatement",
                  "src": "2117:21:43"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6432,
                      "name": "RefundsClosed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6337,
                      "src": "2153:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2153:15:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6434,
                  "nodeType": "EmitStatement",
                  "src": "2148:20:43"
                }
              ]
            },
            "documentation": {
              "id": 6413,
              "nodeType": "StructuredDocumentation",
              "src": "1863:110:43",
              "text": " @dev Allows for the beneficiary to withdraw their funds, rejecting\n further deposits."
            },
            "functionSelector": "43d726d6",
            "id": 6436,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6416,
                "modifierName": {
                  "id": 6415,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5076,
                  "src": "2010:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "2010:9:43"
              }
            ],
            "name": "close",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1992:2:43"
            },
            "returnParameters": {
              "id": 6417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2020:0:43"
            },
            "scope": 6501,
            "src": "1978:197:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6459,
              "nodeType": "Block",
              "src": "2321:168:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$6335",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 6447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6443,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6380,
                            "src": "2339:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$6335_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 6444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2339:7:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 6445,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6335,
                            "src": "2350:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 6446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "src": "2350:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "2339:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726566756e6473207768696c6520616374697665",
                        "id": 6448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2364:52:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200",
                          "typeString": "literal_string \"RefundEscrow: can only enable refunds while active\""
                        },
                        "value": "RefundEscrow: can only enable refunds while active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c983cde4805ee52cdf0ba0ddf13817bc95474a21a1151fc5899abaab3f302200",
                          "typeString": "literal_string \"RefundEscrow: can only enable refunds while active\""
                        }
                      ],
                      "id": 6442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2331:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2331:86:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6450,
                  "nodeType": "ExpressionStatement",
                  "src": "2331:86:43"
                },
                {
                  "expression": {
                    "id": 6454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6451,
                      "name": "_state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6342,
                      "src": "2427:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6452,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6335,
                        "src": "2436:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 6453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Refunding",
                      "nodeType": "MemberAccess",
                      "src": "2436:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "2427:24:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$6335",
                      "typeString": "enum RefundEscrow.State"
                    }
                  },
                  "id": 6455,
                  "nodeType": "ExpressionStatement",
                  "src": "2427:24:43"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6456,
                      "name": "RefundsEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6339,
                      "src": "2466:14:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2466:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6458,
                  "nodeType": "EmitStatement",
                  "src": "2461:21:43"
                }
              ]
            },
            "documentation": {
              "id": 6437,
              "nodeType": "StructuredDocumentation",
              "src": "2181:85:43",
              "text": " @dev Allows for refunds to take place, rejecting further deposits."
            },
            "functionSelector": "8c52dc41",
            "id": 6460,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6440,
                "modifierName": {
                  "id": 6439,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5076,
                  "src": "2311:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "2311:9:43"
              }
            ],
            "name": "enableRefunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2293:2:43"
            },
            "returnParameters": {
              "id": 6441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2321:0:43"
            },
            "scope": 6501,
            "src": "2271:218:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6483,
              "nodeType": "Block",
              "src": "2604:165:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$6335",
                          "typeString": "enum RefundEscrow.State"
                        },
                        "id": 6469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6465,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6380,
                            "src": "2622:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$6335_$",
                              "typeString": "function () view returns (enum RefundEscrow.State)"
                            }
                          },
                          "id": 6466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2622:7:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 6467,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6335,
                            "src": "2633:5:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                              "typeString": "type(enum RefundEscrow.State)"
                            }
                          },
                          "id": 6468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Closed",
                          "nodeType": "MemberAccess",
                          "src": "2633:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$6335",
                            "typeString": "enum RefundEscrow.State"
                          }
                        },
                        "src": "2622:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526566756e64457363726f773a2062656e65666963696172792063616e206f6e6c79207769746864726177207768696c6520636c6f736564",
                        "id": 6470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2647:58:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc",
                          "typeString": "literal_string \"RefundEscrow: beneficiary can only withdraw while closed\""
                        },
                        "value": "RefundEscrow: beneficiary can only withdraw while closed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01d94a28ecd337ff4054022bb41ef2363cd1a92d1c775148e2e03f86b6e5dabc",
                          "typeString": "literal_string \"RefundEscrow: beneficiary can only withdraw while closed\""
                        }
                      ],
                      "id": 6464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2614:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2614:92:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6472,
                  "nodeType": "ExpressionStatement",
                  "src": "2614:92:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 6478,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2748:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RefundEscrow_$6501",
                                "typeString": "contract RefundEscrow"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RefundEscrow_$6501",
                                "typeString": "contract RefundEscrow"
                              }
                            ],
                            "id": 6477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2740:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6476,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2740:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2740:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 6480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2740:21:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6473,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6389,
                          "src": "2716:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 6474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2716:13:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 6475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5451,
                      "src": "2716:23:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$bound_to$_t_address_payable_$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 6481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2716:46:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6482,
                  "nodeType": "ExpressionStatement",
                  "src": "2716:46:43"
                }
              ]
            },
            "documentation": {
              "id": 6461,
              "nodeType": "StructuredDocumentation",
              "src": "2495:58:43",
              "text": " @dev Withdraws the beneficiary's funds."
            },
            "functionSelector": "9af6549a",
            "id": 6484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "beneficiaryWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2586:2:43"
            },
            "returnParameters": {
              "id": 6463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2604:0:43"
            },
            "scope": 6501,
            "src": "2558:211:43",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6205
            ],
            "body": {
              "id": 6499,
              "nodeType": "Block",
              "src": "3072:50:43",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$6335",
                      "typeString": "enum RefundEscrow.State"
                    },
                    "id": 6497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6493,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6380,
                        "src": "3089:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_enum$_State_$6335_$",
                          "typeString": "function () view returns (enum RefundEscrow.State)"
                        }
                      },
                      "id": 6494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3089:7:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 6495,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6335,
                        "src": "3100:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$6335_$",
                          "typeString": "type(enum RefundEscrow.State)"
                        }
                      },
                      "id": 6496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Refunding",
                      "nodeType": "MemberAccess",
                      "src": "3100:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$6335",
                        "typeString": "enum RefundEscrow.State"
                      }
                    },
                    "src": "3089:26:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6492,
                  "id": 6498,
                  "nodeType": "Return",
                  "src": "3082:33:43"
                }
              ]
            },
            "documentation": {
              "id": 6485,
              "nodeType": "StructuredDocumentation",
              "src": "2775:220:43",
              "text": " @dev Returns whether refundees can withdraw their deposits (be refunded). The overridden function receives a\n 'payee' argument, but we ignore it here since the condition is global, not per-payee."
            },
            "functionSelector": "685ca194",
            "id": 6500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawalAllowed",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6489,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3048:8:43"
            },
            "parameters": {
              "id": 6488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6487,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6500,
                  "src": "3027:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3027:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3026:9:43"
            },
            "returnParameters": {
              "id": 6492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6491,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6500,
                  "src": "3066:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6490,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3066:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3065:6:43"
            },
            "scope": 6501,
            "src": "3000:122:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6502,
        "src": "573:2551:43"
      }
    ],
    "src": "33:3092:43"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-07-27T17:00:56.620Z",
  "devdoc": {
    "details": "Escrow that holds funds for a beneficiary, deposited from multiple parties.Intended usage: See {Escrow}. Same usage guidelines apply here.The owner account (that is, the contract that instantiates this contract) may deposit, close the deposit period, and allow for either withdrawal by the beneficiary, or refunds to the depositors. All interactions with `RefundEscrow` will be made through the owner contract.",
    "kind": "dev",
    "methods": {
      "beneficiary()": {
        "returns": {
          "_0": "The beneficiary of the escrow."
        }
      },
      "beneficiaryWithdraw()": {
        "details": "Withdraws the beneficiary's funds."
      },
      "close()": {
        "details": "Allows for the beneficiary to withdraw their funds, rejecting further deposits."
      },
      "constructor": {
        "details": "Constructor.",
        "params": {
          "beneficiary_": "The beneficiary of the deposits."
        }
      },
      "deposit(address)": {
        "details": "Stores funds that may later be refunded.",
        "params": {
          "refundee": "The address funds will be sent to if a refund occurs."
        }
      },
      "enableRefunds()": {
        "details": "Allows for refunds to take place, rejecting further deposits."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "state()": {
        "returns": {
          "_0": "The current state of the escrow."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(address)": {
        "details": "Withdraw accumulated balance for a payee, forwarding all gas to the recipient. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.",
        "params": {
          "payee": "The address whose funds will be withdrawn and transferred to."
        }
      },
      "withdrawalAllowed(address)": {
        "details": "Returns whether refundees can withdraw their deposits (be refunded). The overridden function receives a 'payee' argument, but we ignore it here since the condition is global, not per-payee."
      }
    },
    "title": "RefundEscrow",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}